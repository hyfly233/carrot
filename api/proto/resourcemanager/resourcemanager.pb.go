// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v4.25.3
// source: resourcemanager.proto

package resourcemanager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 节点状态
type NodeState int32

const (
	NodeState_NODE_STATE_UNSPECIFIED     NodeState = 0
	NodeState_NODE_STATE_NEW             NodeState = 1
	NodeState_NODE_STATE_RUNNING         NodeState = 2
	NodeState_NODE_STATE_UNHEALTHY       NodeState = 3
	NodeState_NODE_STATE_DECOMMISSIONING NodeState = 4
	NodeState_NODE_STATE_DECOMMISSIONED  NodeState = 5
	NodeState_NODE_STATE_LOST            NodeState = 6
	NodeState_NODE_STATE_REBOOTED        NodeState = 7
)

// Enum value maps for NodeState.
var (
	NodeState_name = map[int32]string{
		0: "NODE_STATE_UNSPECIFIED",
		1: "NODE_STATE_NEW",
		2: "NODE_STATE_RUNNING",
		3: "NODE_STATE_UNHEALTHY",
		4: "NODE_STATE_DECOMMISSIONING",
		5: "NODE_STATE_DECOMMISSIONED",
		6: "NODE_STATE_LOST",
		7: "NODE_STATE_REBOOTED",
	}
	NodeState_value = map[string]int32{
		"NODE_STATE_UNSPECIFIED":     0,
		"NODE_STATE_NEW":             1,
		"NODE_STATE_RUNNING":         2,
		"NODE_STATE_UNHEALTHY":       3,
		"NODE_STATE_DECOMMISSIONING": 4,
		"NODE_STATE_DECOMMISSIONED":  5,
		"NODE_STATE_LOST":            6,
		"NODE_STATE_REBOOTED":        7,
	}
)

func (x NodeState) Enum() *NodeState {
	p := new(NodeState)
	*p = x
	return p
}

func (x NodeState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeState) Descriptor() protoreflect.EnumDescriptor {
	return file_resourcemanager_proto_enumTypes[0].Descriptor()
}

func (NodeState) Type() protoreflect.EnumType {
	return &file_resourcemanager_proto_enumTypes[0]
}

func (x NodeState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeState.Descriptor instead.
func (NodeState) EnumDescriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{0}
}

// 应用程序状态
type ApplicationState int32

const (
	ApplicationState_APPLICATION_STATE_UNSPECIFIED ApplicationState = 0
	ApplicationState_APPLICATION_STATE_NEW         ApplicationState = 1
	ApplicationState_APPLICATION_STATE_NEW_SAVING  ApplicationState = 2
	ApplicationState_APPLICATION_STATE_SUBMITTED   ApplicationState = 3
	ApplicationState_APPLICATION_STATE_ACCEPTED    ApplicationState = 4
	ApplicationState_APPLICATION_STATE_RUNNING     ApplicationState = 5
	ApplicationState_APPLICATION_STATE_FINISHED    ApplicationState = 6
	ApplicationState_APPLICATION_STATE_FAILED      ApplicationState = 7
	ApplicationState_APPLICATION_STATE_KILLED      ApplicationState = 8
)

// Enum value maps for ApplicationState.
var (
	ApplicationState_name = map[int32]string{
		0: "APPLICATION_STATE_UNSPECIFIED",
		1: "APPLICATION_STATE_NEW",
		2: "APPLICATION_STATE_NEW_SAVING",
		3: "APPLICATION_STATE_SUBMITTED",
		4: "APPLICATION_STATE_ACCEPTED",
		5: "APPLICATION_STATE_RUNNING",
		6: "APPLICATION_STATE_FINISHED",
		7: "APPLICATION_STATE_FAILED",
		8: "APPLICATION_STATE_KILLED",
	}
	ApplicationState_value = map[string]int32{
		"APPLICATION_STATE_UNSPECIFIED": 0,
		"APPLICATION_STATE_NEW":         1,
		"APPLICATION_STATE_NEW_SAVING":  2,
		"APPLICATION_STATE_SUBMITTED":   3,
		"APPLICATION_STATE_ACCEPTED":    4,
		"APPLICATION_STATE_RUNNING":     5,
		"APPLICATION_STATE_FINISHED":    6,
		"APPLICATION_STATE_FAILED":      7,
		"APPLICATION_STATE_KILLED":      8,
	}
)

func (x ApplicationState) Enum() *ApplicationState {
	p := new(ApplicationState)
	*p = x
	return p
}

func (x ApplicationState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ApplicationState) Descriptor() protoreflect.EnumDescriptor {
	return file_resourcemanager_proto_enumTypes[1].Descriptor()
}

func (ApplicationState) Type() protoreflect.EnumType {
	return &file_resourcemanager_proto_enumTypes[1]
}

func (x ApplicationState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ApplicationState.Descriptor instead.
func (ApplicationState) EnumDescriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{1}
}

// 容器状态
type ContainerState int32

const (
	ContainerState_CONTAINER_STATE_UNSPECIFIED ContainerState = 0
	ContainerState_CONTAINER_STATE_NEW         ContainerState = 1
	ContainerState_CONTAINER_STATE_RUNNING     ContainerState = 2
	ContainerState_CONTAINER_STATE_COMPLETE    ContainerState = 3
	ContainerState_CONTAINER_STATE_FAILED      ContainerState = 4
	ContainerState_CONTAINER_STATE_KILLED      ContainerState = 5
)

// Enum value maps for ContainerState.
var (
	ContainerState_name = map[int32]string{
		0: "CONTAINER_STATE_UNSPECIFIED",
		1: "CONTAINER_STATE_NEW",
		2: "CONTAINER_STATE_RUNNING",
		3: "CONTAINER_STATE_COMPLETE",
		4: "CONTAINER_STATE_FAILED",
		5: "CONTAINER_STATE_KILLED",
	}
	ContainerState_value = map[string]int32{
		"CONTAINER_STATE_UNSPECIFIED": 0,
		"CONTAINER_STATE_NEW":         1,
		"CONTAINER_STATE_RUNNING":     2,
		"CONTAINER_STATE_COMPLETE":    3,
		"CONTAINER_STATE_FAILED":      4,
		"CONTAINER_STATE_KILLED":      5,
	}
)

func (x ContainerState) Enum() *ContainerState {
	p := new(ContainerState)
	*p = x
	return p
}

func (x ContainerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContainerState) Descriptor() protoreflect.EnumDescriptor {
	return file_resourcemanager_proto_enumTypes[2].Descriptor()
}

func (ContainerState) Type() protoreflect.EnumType {
	return &file_resourcemanager_proto_enumTypes[2]
}

func (x ContainerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContainerState.Descriptor instead.
func (ContainerState) EnumDescriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{2}
}

// 容器操作类型
type ActionType int32

const (
	ActionType_ACTION_TYPE_UNSPECIFIED ActionType = 0
	ActionType_ACTION_TYPE_LAUNCH      ActionType = 1
	ActionType_ACTION_TYPE_STOP        ActionType = 2
	ActionType_ACTION_TYPE_KILL        ActionType = 3
	ActionType_ACTION_TYPE_CLEANUP     ActionType = 4
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0: "ACTION_TYPE_UNSPECIFIED",
		1: "ACTION_TYPE_LAUNCH",
		2: "ACTION_TYPE_STOP",
		3: "ACTION_TYPE_KILL",
		4: "ACTION_TYPE_CLEANUP",
	}
	ActionType_value = map[string]int32{
		"ACTION_TYPE_UNSPECIFIED": 0,
		"ACTION_TYPE_LAUNCH":      1,
		"ACTION_TYPE_STOP":        2,
		"ACTION_TYPE_KILL":        3,
		"ACTION_TYPE_CLEANUP":     4,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_resourcemanager_proto_enumTypes[3].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_resourcemanager_proto_enumTypes[3]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{3}
}

// 健康状态
type HealthState int32

const (
	HealthState_HEALTH_STATE_UNSPECIFIED HealthState = 0
	HealthState_HEALTH_STATE_HEALTHY     HealthState = 1
	HealthState_HEALTH_STATE_UNHEALTHY   HealthState = 2
	HealthState_HEALTH_STATE_UNKNOWN     HealthState = 3
)

// Enum value maps for HealthState.
var (
	HealthState_name = map[int32]string{
		0: "HEALTH_STATE_UNSPECIFIED",
		1: "HEALTH_STATE_HEALTHY",
		2: "HEALTH_STATE_UNHEALTHY",
		3: "HEALTH_STATE_UNKNOWN",
	}
	HealthState_value = map[string]int32{
		"HEALTH_STATE_UNSPECIFIED": 0,
		"HEALTH_STATE_HEALTHY":     1,
		"HEALTH_STATE_UNHEALTHY":   2,
		"HEALTH_STATE_UNKNOWN":     3,
	}
)

func (x HealthState) Enum() *HealthState {
	p := new(HealthState)
	*p = x
	return p
}

func (x HealthState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthState) Descriptor() protoreflect.EnumDescriptor {
	return file_resourcemanager_proto_enumTypes[4].Descriptor()
}

func (HealthState) Type() protoreflect.EnumType {
	return &file_resourcemanager_proto_enumTypes[4]
}

func (x HealthState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthState.Descriptor instead.
func (HealthState) EnumDescriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{4}
}

// 节点注册请求
type RegisterNodeRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NodeInfo        *NodeInfo              `protobuf:"bytes,1,opt,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`
	TotalCapability *ResourceCapability    `protobuf:"bytes,2,opt,name=total_capability,json=totalCapability,proto3" json:"total_capability,omitempty"`
	HttpAddress     string                 `protobuf:"bytes,3,opt,name=http_address,json=httpAddress,proto3" json:"http_address,omitempty"`
	GrpcAddress     string                 `protobuf:"bytes,4,opt,name=grpc_address,json=grpcAddress,proto3" json:"grpc_address,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RegisterNodeRequest) Reset() {
	*x = RegisterNodeRequest{}
	mi := &file_resourcemanager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeRequest) ProtoMessage() {}

func (x *RegisterNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeRequest.ProtoReflect.Descriptor instead.
func (*RegisterNodeRequest) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterNodeRequest) GetNodeInfo() *NodeInfo {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

func (x *RegisterNodeRequest) GetTotalCapability() *ResourceCapability {
	if x != nil {
		return x.TotalCapability
	}
	return nil
}

func (x *RegisterNodeRequest) GetHttpAddress() string {
	if x != nil {
		return x.HttpAddress
	}
	return ""
}

func (x *RegisterNodeRequest) GetGrpcAddress() string {
	if x != nil {
		return x.GrpcAddress
	}
	return ""
}

// 节点注册响应
type RegisterNodeResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Success               bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message               string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	NodeId                string                 `protobuf:"bytes,3,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	RegistrationTimestamp int64                  `protobuf:"varint,4,opt,name=registration_timestamp,json=registrationTimestamp,proto3" json:"registration_timestamp,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *RegisterNodeResponse) Reset() {
	*x = RegisterNodeResponse{}
	mi := &file_resourcemanager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeResponse) ProtoMessage() {}

func (x *RegisterNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeResponse.ProtoReflect.Descriptor instead.
func (*RegisterNodeResponse) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterNodeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterNodeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterNodeResponse) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *RegisterNodeResponse) GetRegistrationTimestamp() int64 {
	if x != nil {
		return x.RegistrationTimestamp
	}
	return 0
}

// 节点心跳请求
type NodeHeartbeatRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NodeId            string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	UsedResources     *ResourceUsage         `protobuf:"bytes,2,opt,name=used_resources,json=usedResources,proto3" json:"used_resources,omitempty"`
	ContainerStatuses []*ContainerStatus     `protobuf:"bytes,3,rep,name=container_statuses,json=containerStatuses,proto3" json:"container_statuses,omitempty"`
	Timestamp         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	HealthStatus      *HealthStatus          `protobuf:"bytes,5,opt,name=health_status,json=healthStatus,proto3" json:"health_status,omitempty"`
	SequenceNumber    int32                  `protobuf:"varint,6,opt,name=sequence_number,json=sequenceNumber,proto3" json:"sequence_number,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NodeHeartbeatRequest) Reset() {
	*x = NodeHeartbeatRequest{}
	mi := &file_resourcemanager_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeHeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeHeartbeatRequest) ProtoMessage() {}

func (x *NodeHeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeHeartbeatRequest.ProtoReflect.Descriptor instead.
func (*NodeHeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{2}
}

func (x *NodeHeartbeatRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeHeartbeatRequest) GetUsedResources() *ResourceUsage {
	if x != nil {
		return x.UsedResources
	}
	return nil
}

func (x *NodeHeartbeatRequest) GetContainerStatuses() []*ContainerStatus {
	if x != nil {
		return x.ContainerStatuses
	}
	return nil
}

func (x *NodeHeartbeatRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *NodeHeartbeatRequest) GetHealthStatus() *HealthStatus {
	if x != nil {
		return x.HealthStatus
	}
	return nil
}

func (x *NodeHeartbeatRequest) GetSequenceNumber() int32 {
	if x != nil {
		return x.SequenceNumber
	}
	return 0
}

// 节点心跳响应
type NodeHeartbeatResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Success           bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message           string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ContainerActions  []*ContainerAction     `protobuf:"bytes,3,rep,name=container_actions,json=containerActions,proto3" json:"container_actions,omitempty"`
	ResponseId        int64                  `protobuf:"varint,4,opt,name=response_id,json=responseId,proto3" json:"response_id,omitempty"`
	HeartbeatInterval int32                  `protobuf:"varint,5,opt,name=heartbeat_interval,json=heartbeatInterval,proto3" json:"heartbeat_interval,omitempty"` // 秒
	ShouldResync      bool                   `protobuf:"varint,6,opt,name=should_resync,json=shouldResync,proto3" json:"should_resync,omitempty"`                // 是否需要重新同步
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *NodeHeartbeatResponse) Reset() {
	*x = NodeHeartbeatResponse{}
	mi := &file_resourcemanager_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeHeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeHeartbeatResponse) ProtoMessage() {}

func (x *NodeHeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeHeartbeatResponse.ProtoReflect.Descriptor instead.
func (*NodeHeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{3}
}

func (x *NodeHeartbeatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *NodeHeartbeatResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *NodeHeartbeatResponse) GetContainerActions() []*ContainerAction {
	if x != nil {
		return x.ContainerActions
	}
	return nil
}

func (x *NodeHeartbeatResponse) GetResponseId() int64 {
	if x != nil {
		return x.ResponseId
	}
	return 0
}

func (x *NodeHeartbeatResponse) GetHeartbeatInterval() int32 {
	if x != nil {
		return x.HeartbeatInterval
	}
	return 0
}

func (x *NodeHeartbeatResponse) GetShouldResync() bool {
	if x != nil {
		return x.ShouldResync
	}
	return false
}

// 获取节点列表请求
type GetNodesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	StateFilter   string                 `protobuf:"bytes,1,opt,name=state_filter,json=stateFilter,proto3" json:"state_filter,omitempty"` // 可选的状态过滤器
	Labels        []string               `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty"`                              // 标签过滤器
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodesRequest) Reset() {
	*x = GetNodesRequest{}
	mi := &file_resourcemanager_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesRequest) ProtoMessage() {}

func (x *GetNodesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesRequest.ProtoReflect.Descriptor instead.
func (*GetNodesRequest) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{4}
}

func (x *GetNodesRequest) GetStateFilter() string {
	if x != nil {
		return x.StateFilter
	}
	return ""
}

func (x *GetNodesRequest) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// 获取节点列表响应
type GetNodesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nodes         []*Node                `protobuf:"bytes,1,rep,name=nodes,proto3" json:"nodes,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodesResponse) Reset() {
	*x = GetNodesResponse{}
	mi := &file_resourcemanager_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodesResponse) ProtoMessage() {}

func (x *GetNodesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodesResponse.ProtoReflect.Descriptor instead.
func (*GetNodesResponse) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{5}
}

func (x *GetNodesResponse) GetNodes() []*Node {
	if x != nil {
		return x.Nodes
	}
	return nil
}

func (x *GetNodesResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// 提交应用程序请求
type SubmitApplicationRequest struct {
	state              protoimpl.MessageState        `protogen:"open.v1"`
	ApplicationContext *ApplicationSubmissionContext `protobuf:"bytes,1,opt,name=application_context,json=applicationContext,proto3" json:"application_context,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *SubmitApplicationRequest) Reset() {
	*x = SubmitApplicationRequest{}
	mi := &file_resourcemanager_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitApplicationRequest) ProtoMessage() {}

func (x *SubmitApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitApplicationRequest.ProtoReflect.Descriptor instead.
func (*SubmitApplicationRequest) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{6}
}

func (x *SubmitApplicationRequest) GetApplicationContext() *ApplicationSubmissionContext {
	if x != nil {
		return x.ApplicationContext
	}
	return nil
}

// 提交应用程序响应
type SubmitApplicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ApplicationId string                 `protobuf:"bytes,3,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SubmitApplicationResponse) Reset() {
	*x = SubmitApplicationResponse{}
	mi := &file_resourcemanager_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SubmitApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitApplicationResponse) ProtoMessage() {}

func (x *SubmitApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitApplicationResponse.ProtoReflect.Descriptor instead.
func (*SubmitApplicationResponse) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{7}
}

func (x *SubmitApplicationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *SubmitApplicationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *SubmitApplicationResponse) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

// 获取应用程序列表请求
type GetApplicationsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	States        []string               `protobuf:"bytes,1,rep,name=states,proto3" json:"states,omitempty"`                           // 状态过滤器
	UserFilter    string                 `protobuf:"bytes,2,opt,name=user_filter,json=userFilter,proto3" json:"user_filter,omitempty"` // 用户过滤器
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`                            // 结果限制
	Offset        int32                  `protobuf:"varint,4,opt,name=offset,proto3" json:"offset,omitempty"`                          // 分页偏移
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetApplicationsRequest) Reset() {
	*x = GetApplicationsRequest{}
	mi := &file_resourcemanager_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApplicationsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationsRequest) ProtoMessage() {}

func (x *GetApplicationsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationsRequest.ProtoReflect.Descriptor instead.
func (*GetApplicationsRequest) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{8}
}

func (x *GetApplicationsRequest) GetStates() []string {
	if x != nil {
		return x.States
	}
	return nil
}

func (x *GetApplicationsRequest) GetUserFilter() string {
	if x != nil {
		return x.UserFilter
	}
	return ""
}

func (x *GetApplicationsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *GetApplicationsRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

// 获取应用程序列表响应
type GetApplicationsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Applications  []*Application         `protobuf:"bytes,1,rep,name=applications,proto3" json:"applications,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetApplicationsResponse) Reset() {
	*x = GetApplicationsResponse{}
	mi := &file_resourcemanager_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApplicationsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationsResponse) ProtoMessage() {}

func (x *GetApplicationsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationsResponse.ProtoReflect.Descriptor instead.
func (*GetApplicationsResponse) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{9}
}

func (x *GetApplicationsResponse) GetApplications() []*Application {
	if x != nil {
		return x.Applications
	}
	return nil
}

func (x *GetApplicationsResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

// 获取单个应用程序请求
type GetApplicationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApplicationId string                 `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetApplicationRequest) Reset() {
	*x = GetApplicationRequest{}
	mi := &file_resourcemanager_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationRequest) ProtoMessage() {}

func (x *GetApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationRequest.ProtoReflect.Descriptor instead.
func (*GetApplicationRequest) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{10}
}

func (x *GetApplicationRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

// 获取单个应用程序响应
type GetApplicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Application   *Application           `protobuf:"bytes,1,opt,name=application,proto3" json:"application,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetApplicationResponse) Reset() {
	*x = GetApplicationResponse{}
	mi := &file_resourcemanager_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetApplicationResponse) ProtoMessage() {}

func (x *GetApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetApplicationResponse.ProtoReflect.Descriptor instead.
func (*GetApplicationResponse) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{11}
}

func (x *GetApplicationResponse) GetApplication() *Application {
	if x != nil {
		return x.Application
	}
	return nil
}

// 终止应用程序请求
type KillApplicationRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ApplicationId string                 `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KillApplicationRequest) Reset() {
	*x = KillApplicationRequest{}
	mi := &file_resourcemanager_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillApplicationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillApplicationRequest) ProtoMessage() {}

func (x *KillApplicationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillApplicationRequest.ProtoReflect.Descriptor instead.
func (*KillApplicationRequest) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{12}
}

func (x *KillApplicationRequest) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *KillApplicationRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 终止应用程序响应
type KillApplicationResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *KillApplicationResponse) Reset() {
	*x = KillApplicationResponse{}
	mi := &file_resourcemanager_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *KillApplicationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*KillApplicationResponse) ProtoMessage() {}

func (x *KillApplicationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use KillApplicationResponse.ProtoReflect.Descriptor instead.
func (*KillApplicationResponse) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{13}
}

func (x *KillApplicationResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *KillApplicationResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取集群信息请求
type GetClusterInfoRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterInfoRequest) Reset() {
	*x = GetClusterInfoRequest{}
	mi := &file_resourcemanager_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterInfoRequest) ProtoMessage() {}

func (x *GetClusterInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterInfoRequest.ProtoReflect.Descriptor instead.
func (*GetClusterInfoRequest) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{14}
}

// 获取集群信息响应
type GetClusterInfoResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ClusterInfo   *ClusterInfo           `protobuf:"bytes,1,opt,name=cluster_info,json=clusterInfo,proto3" json:"cluster_info,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterInfoResponse) Reset() {
	*x = GetClusterInfoResponse{}
	mi := &file_resourcemanager_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterInfoResponse) ProtoMessage() {}

func (x *GetClusterInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterInfoResponse.ProtoReflect.Descriptor instead.
func (*GetClusterInfoResponse) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{15}
}

func (x *GetClusterInfoResponse) GetClusterInfo() *ClusterInfo {
	if x != nil {
		return x.ClusterInfo
	}
	return nil
}

// 获取集群指标请求
type GetClusterMetricsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetClusterMetricsRequest) Reset() {
	*x = GetClusterMetricsRequest{}
	mi := &file_resourcemanager_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterMetricsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterMetricsRequest) ProtoMessage() {}

func (x *GetClusterMetricsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterMetricsRequest.ProtoReflect.Descriptor instead.
func (*GetClusterMetricsRequest) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{16}
}

// 获取集群指标响应
type GetClusterMetricsResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	ClusterMetrics *ClusterMetrics        `protobuf:"bytes,1,opt,name=cluster_metrics,json=clusterMetrics,proto3" json:"cluster_metrics,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetClusterMetricsResponse) Reset() {
	*x = GetClusterMetricsResponse{}
	mi := &file_resourcemanager_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetClusterMetricsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClusterMetricsResponse) ProtoMessage() {}

func (x *GetClusterMetricsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClusterMetricsResponse.ProtoReflect.Descriptor instead.
func (*GetClusterMetricsResponse) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{17}
}

func (x *GetClusterMetricsResponse) GetClusterMetrics() *ClusterMetrics {
	if x != nil {
		return x.ClusterMetrics
	}
	return nil
}

// 节点信息
type NodeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Hostname      string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	IpAddress     string                 `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Port          int32                  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	RackName      string                 `protobuf:"bytes,5,opt,name=rack_name,json=rackName,proto3" json:"rack_name,omitempty"`
	Labels        []string               `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty"`
	LastHeartbeat *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=last_heartbeat,json=lastHeartbeat,proto3" json:"last_heartbeat,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	mi := &file_resourcemanager_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{18}
}

func (x *NodeInfo) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *NodeInfo) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *NodeInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *NodeInfo) GetRackName() string {
	if x != nil {
		return x.RackName
	}
	return ""
}

func (x *NodeInfo) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *NodeInfo) GetLastHeartbeat() *timestamppb.Timestamp {
	if x != nil {
		return x.LastHeartbeat
	}
	return nil
}

// 节点
type Node struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NodeInfo        *NodeInfo              `protobuf:"bytes,1,opt,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`
	TotalCapability *ResourceCapability    `protobuf:"bytes,2,opt,name=total_capability,json=totalCapability,proto3" json:"total_capability,omitempty"`
	UsedResources   *ResourceUsage         `protobuf:"bytes,3,opt,name=used_resources,json=usedResources,proto3" json:"used_resources,omitempty"`
	State           NodeState              `protobuf:"varint,4,opt,name=state,proto3,enum=carrot.resourcemanager.NodeState" json:"state,omitempty"`
	HealthStatus    *HealthStatus          `protobuf:"bytes,5,opt,name=health_status,json=healthStatus,proto3" json:"health_status,omitempty"`
	NumContainers   int32                  `protobuf:"varint,6,opt,name=num_containers,json=numContainers,proto3" json:"num_containers,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *Node) Reset() {
	*x = Node{}
	mi := &file_resourcemanager_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Node) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Node) ProtoMessage() {}

func (x *Node) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Node.ProtoReflect.Descriptor instead.
func (*Node) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{19}
}

func (x *Node) GetNodeInfo() *NodeInfo {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

func (x *Node) GetTotalCapability() *ResourceCapability {
	if x != nil {
		return x.TotalCapability
	}
	return nil
}

func (x *Node) GetUsedResources() *ResourceUsage {
	if x != nil {
		return x.UsedResources
	}
	return nil
}

func (x *Node) GetState() NodeState {
	if x != nil {
		return x.State
	}
	return NodeState_NODE_STATE_UNSPECIFIED
}

func (x *Node) GetHealthStatus() *HealthStatus {
	if x != nil {
		return x.HealthStatus
	}
	return nil
}

func (x *Node) GetNumContainers() int32 {
	if x != nil {
		return x.NumContainers
	}
	return 0
}

// 资源能力
type ResourceCapability struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MemoryMb          int64                  `protobuf:"varint,1,opt,name=memory_mb,json=memoryMb,proto3" json:"memory_mb,omitempty"`
	Vcores            int32                  `protobuf:"varint,2,opt,name=vcores,proto3" json:"vcores,omitempty"`
	ExtendedResources map[string]int64       `protobuf:"bytes,3,rep,name=extended_resources,json=extendedResources,proto3" json:"extended_resources,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ResourceCapability) Reset() {
	*x = ResourceCapability{}
	mi := &file_resourcemanager_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceCapability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceCapability) ProtoMessage() {}

func (x *ResourceCapability) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceCapability.ProtoReflect.Descriptor instead.
func (*ResourceCapability) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{20}
}

func (x *ResourceCapability) GetMemoryMb() int64 {
	if x != nil {
		return x.MemoryMb
	}
	return 0
}

func (x *ResourceCapability) GetVcores() int32 {
	if x != nil {
		return x.Vcores
	}
	return 0
}

func (x *ResourceCapability) GetExtendedResources() map[string]int64 {
	if x != nil {
		return x.ExtendedResources
	}
	return nil
}

// 资源使用情况
type ResourceUsage struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	MemoryMb           int64                  `protobuf:"varint,1,opt,name=memory_mb,json=memoryMb,proto3" json:"memory_mb,omitempty"`
	Vcores             int32                  `protobuf:"varint,2,opt,name=vcores,proto3" json:"vcores,omitempty"`
	ExtendedResources  map[string]int64       `protobuf:"bytes,3,rep,name=extended_resources,json=extendedResources,proto3" json:"extended_resources,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	CpuUsagePercent    float64                `protobuf:"fixed64,4,opt,name=cpu_usage_percent,json=cpuUsagePercent,proto3" json:"cpu_usage_percent,omitempty"`
	MemoryUsagePercent float64                `protobuf:"fixed64,5,opt,name=memory_usage_percent,json=memoryUsagePercent,proto3" json:"memory_usage_percent,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ResourceUsage) Reset() {
	*x = ResourceUsage{}
	mi := &file_resourcemanager_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUsage) ProtoMessage() {}

func (x *ResourceUsage) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceUsage.ProtoReflect.Descriptor instead.
func (*ResourceUsage) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{21}
}

func (x *ResourceUsage) GetMemoryMb() int64 {
	if x != nil {
		return x.MemoryMb
	}
	return 0
}

func (x *ResourceUsage) GetVcores() int32 {
	if x != nil {
		return x.Vcores
	}
	return 0
}

func (x *ResourceUsage) GetExtendedResources() map[string]int64 {
	if x != nil {
		return x.ExtendedResources
	}
	return nil
}

func (x *ResourceUsage) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *ResourceUsage) GetMemoryUsagePercent() float64 {
	if x != nil {
		return x.MemoryUsagePercent
	}
	return 0
}

// 应用程序提交上下文
type ApplicationSubmissionContext struct {
	state           protoimpl.MessageState    `protogen:"open.v1"`
	ApplicationName string                    `protobuf:"bytes,1,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	Queue           string                    `protobuf:"bytes,2,opt,name=queue,proto3" json:"queue,omitempty"`
	User            string                    `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	AmContext       *ApplicationMasterContext `protobuf:"bytes,4,opt,name=am_context,json=amContext,proto3" json:"am_context,omitempty"`
	Priority        int32                     `protobuf:"varint,5,opt,name=priority,proto3" json:"priority,omitempty"`
	ApplicationTags map[string]string         `protobuf:"bytes,6,rep,name=application_tags,json=applicationTags,proto3" json:"application_tags,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	MaxAppAttempts  int64                     `protobuf:"varint,7,opt,name=max_app_attempts,json=maxAppAttempts,proto3" json:"max_app_attempts,omitempty"`
	AmResource      *ResourceCapability       `protobuf:"bytes,8,opt,name=am_resource,json=amResource,proto3" json:"am_resource,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ApplicationSubmissionContext) Reset() {
	*x = ApplicationSubmissionContext{}
	mi := &file_resourcemanager_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationSubmissionContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationSubmissionContext) ProtoMessage() {}

func (x *ApplicationSubmissionContext) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationSubmissionContext.ProtoReflect.Descriptor instead.
func (*ApplicationSubmissionContext) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{22}
}

func (x *ApplicationSubmissionContext) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *ApplicationSubmissionContext) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *ApplicationSubmissionContext) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *ApplicationSubmissionContext) GetAmContext() *ApplicationMasterContext {
	if x != nil {
		return x.AmContext
	}
	return nil
}

func (x *ApplicationSubmissionContext) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

func (x *ApplicationSubmissionContext) GetApplicationTags() map[string]string {
	if x != nil {
		return x.ApplicationTags
	}
	return nil
}

func (x *ApplicationSubmissionContext) GetMaxAppAttempts() int64 {
	if x != nil {
		return x.MaxAppAttempts
	}
	return 0
}

func (x *ApplicationSubmissionContext) GetAmResource() *ResourceCapability {
	if x != nil {
		return x.AmResource
	}
	return nil
}

// ApplicationMaster 上下文
type ApplicationMasterContext struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	AmContainerSpec string                 `protobuf:"bytes,1,opt,name=am_container_spec,json=amContainerSpec,proto3" json:"am_container_spec,omitempty"`
	LocalResources  []string               `protobuf:"bytes,2,rep,name=local_resources,json=localResources,proto3" json:"local_resources,omitempty"`
	Environment     map[string]string      `protobuf:"bytes,3,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Commands        []string               `protobuf:"bytes,4,rep,name=commands,proto3" json:"commands,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ApplicationMasterContext) Reset() {
	*x = ApplicationMasterContext{}
	mi := &file_resourcemanager_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ApplicationMasterContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ApplicationMasterContext) ProtoMessage() {}

func (x *ApplicationMasterContext) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ApplicationMasterContext.ProtoReflect.Descriptor instead.
func (*ApplicationMasterContext) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{23}
}

func (x *ApplicationMasterContext) GetAmContainerSpec() string {
	if x != nil {
		return x.AmContainerSpec
	}
	return ""
}

func (x *ApplicationMasterContext) GetLocalResources() []string {
	if x != nil {
		return x.LocalResources
	}
	return nil
}

func (x *ApplicationMasterContext) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *ApplicationMasterContext) GetCommands() []string {
	if x != nil {
		return x.Commands
	}
	return nil
}

// 应用程序
type Application struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	ApplicationId      string                 `protobuf:"bytes,1,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	ApplicationName    string                 `protobuf:"bytes,2,opt,name=application_name,json=applicationName,proto3" json:"application_name,omitempty"`
	User               string                 `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Queue              string                 `protobuf:"bytes,4,opt,name=queue,proto3" json:"queue,omitempty"`
	State              ApplicationState       `protobuf:"varint,5,opt,name=state,proto3,enum=carrot.resourcemanager.ApplicationState" json:"state,omitempty"`
	Progress           float64                `protobuf:"fixed64,6,opt,name=progress,proto3" json:"progress,omitempty"`
	TrackingUrl        string                 `protobuf:"bytes,7,opt,name=tracking_url,json=trackingUrl,proto3" json:"tracking_url,omitempty"`
	Diagnostics        string                 `protobuf:"bytes,8,opt,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	StartTime          *timestamppb.Timestamp `protobuf:"bytes,9,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime         *timestamppb.Timestamp `protobuf:"bytes,10,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	FinalStatus        string                 `protobuf:"bytes,11,opt,name=final_status,json=finalStatus,proto3" json:"final_status,omitempty"`
	AllocatedResources *ResourceUsage         `protobuf:"bytes,12,opt,name=allocated_resources,json=allocatedResources,proto3" json:"allocated_resources,omitempty"`
	ReservedResources  *ResourceUsage         `protobuf:"bytes,13,opt,name=reserved_resources,json=reservedResources,proto3" json:"reserved_resources,omitempty"`
	Priority           int32                  `protobuf:"varint,14,opt,name=priority,proto3" json:"priority,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *Application) Reset() {
	*x = Application{}
	mi := &file_resourcemanager_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Application) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Application) ProtoMessage() {}

func (x *Application) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Application.ProtoReflect.Descriptor instead.
func (*Application) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{24}
}

func (x *Application) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *Application) GetApplicationName() string {
	if x != nil {
		return x.ApplicationName
	}
	return ""
}

func (x *Application) GetUser() string {
	if x != nil {
		return x.User
	}
	return ""
}

func (x *Application) GetQueue() string {
	if x != nil {
		return x.Queue
	}
	return ""
}

func (x *Application) GetState() ApplicationState {
	if x != nil {
		return x.State
	}
	return ApplicationState_APPLICATION_STATE_UNSPECIFIED
}

func (x *Application) GetProgress() float64 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *Application) GetTrackingUrl() string {
	if x != nil {
		return x.TrackingUrl
	}
	return ""
}

func (x *Application) GetDiagnostics() string {
	if x != nil {
		return x.Diagnostics
	}
	return ""
}

func (x *Application) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *Application) GetFinishTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishTime
	}
	return nil
}

func (x *Application) GetFinalStatus() string {
	if x != nil {
		return x.FinalStatus
	}
	return ""
}

func (x *Application) GetAllocatedResources() *ResourceUsage {
	if x != nil {
		return x.AllocatedResources
	}
	return nil
}

func (x *Application) GetReservedResources() *ResourceUsage {
	if x != nil {
		return x.ReservedResources
	}
	return nil
}

func (x *Application) GetPriority() int32 {
	if x != nil {
		return x.Priority
	}
	return 0
}

// 容器状态
type ContainerStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ApplicationId string                 `protobuf:"bytes,2,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	State         ContainerState         `protobuf:"varint,3,opt,name=state,proto3,enum=carrot.resourcemanager.ContainerState" json:"state,omitempty"`
	ExitCode      int32                  `protobuf:"varint,4,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Diagnostics   string                 `protobuf:"bytes,5,opt,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	ResourceUsage *ResourceUsage         `protobuf:"bytes,6,opt,name=resource_usage,json=resourceUsage,proto3" json:"resource_usage,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	NodeId        string                 `protobuf:"bytes,9,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerStatus) Reset() {
	*x = ContainerStatus{}
	mi := &file_resourcemanager_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStatus) ProtoMessage() {}

func (x *ContainerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStatus.ProtoReflect.Descriptor instead.
func (*ContainerStatus) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{25}
}

func (x *ContainerStatus) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ContainerStatus) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *ContainerStatus) GetState() ContainerState {
	if x != nil {
		return x.State
	}
	return ContainerState_CONTAINER_STATE_UNSPECIFIED
}

func (x *ContainerStatus) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ContainerStatus) GetDiagnostics() string {
	if x != nil {
		return x.Diagnostics
	}
	return ""
}

func (x *ContainerStatus) GetResourceUsage() *ResourceUsage {
	if x != nil {
		return x.ResourceUsage
	}
	return nil
}

func (x *ContainerStatus) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ContainerStatus) GetFinishTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishTime
	}
	return nil
}

func (x *ContainerStatus) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

// 容器操作
type ContainerAction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Action        ActionType             `protobuf:"varint,2,opt,name=action,proto3,enum=carrot.resourcemanager.ActionType" json:"action,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	Resource      *ResourceCapability    `protobuf:"bytes,4,opt,name=resource,proto3" json:"resource,omitempty"`
	Environment   map[string]string      `protobuf:"bytes,5,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerAction) Reset() {
	*x = ContainerAction{}
	mi := &file_resourcemanager_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerAction) ProtoMessage() {}

func (x *ContainerAction) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerAction.ProtoReflect.Descriptor instead.
func (*ContainerAction) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{26}
}

func (x *ContainerAction) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ContainerAction) GetAction() ActionType {
	if x != nil {
		return x.Action
	}
	return ActionType_ACTION_TYPE_UNSPECIFIED
}

func (x *ContainerAction) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *ContainerAction) GetResource() *ResourceCapability {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *ContainerAction) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

// 健康状态
type HealthStatus struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	State            HealthState            `protobuf:"varint,1,opt,name=state,proto3,enum=carrot.resourcemanager.HealthState" json:"state,omitempty"`
	LastHealthReport string                 `protobuf:"bytes,2,opt,name=last_health_report,json=lastHealthReport,proto3" json:"last_health_report,omitempty"`
	LastHealthUpdate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_health_update,json=lastHealthUpdate,proto3" json:"last_health_update,omitempty"`
	HealthChecks     []*HealthCheck         `protobuf:"bytes,4,rep,name=health_checks,json=healthChecks,proto3" json:"health_checks,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *HealthStatus) Reset() {
	*x = HealthStatus{}
	mi := &file_resourcemanager_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthStatus) ProtoMessage() {}

func (x *HealthStatus) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthStatus.ProtoReflect.Descriptor instead.
func (*HealthStatus) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{27}
}

func (x *HealthStatus) GetState() HealthState {
	if x != nil {
		return x.State
	}
	return HealthState_HEALTH_STATE_UNSPECIFIED
}

func (x *HealthStatus) GetLastHealthReport() string {
	if x != nil {
		return x.LastHealthReport
	}
	return ""
}

func (x *HealthStatus) GetLastHealthUpdate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastHealthUpdate
	}
	return nil
}

func (x *HealthStatus) GetHealthChecks() []*HealthCheck {
	if x != nil {
		return x.HealthChecks
	}
	return nil
}

// 健康检查
type HealthCheck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State         HealthState            `protobuf:"varint,2,opt,name=state,proto3,enum=carrot.resourcemanager.HealthState" json:"state,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheck) Reset() {
	*x = HealthCheck{}
	mi := &file_resourcemanager_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheck) ProtoMessage() {}

func (x *HealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheck.ProtoReflect.Descriptor instead.
func (*HealthCheck) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{28}
}

func (x *HealthCheck) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HealthCheck) GetState() HealthState {
	if x != nil {
		return x.State
	}
	return HealthState_HEALTH_STATE_UNSPECIFIED
}

func (x *HealthCheck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthCheck) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

// 集群信息
type ClusterInfo struct {
	state                         protoimpl.MessageState `protogen:"open.v1"`
	ClusterId                     string                 `protobuf:"bytes,1,opt,name=cluster_id,json=clusterId,proto3" json:"cluster_id,omitempty"`
	RmVersion                     string                 `protobuf:"bytes,2,opt,name=rm_version,json=rmVersion,proto3" json:"rm_version,omitempty"`
	ResourceManagerBuildVersion   string                 `protobuf:"bytes,3,opt,name=resource_manager_build_version,json=resourceManagerBuildVersion,proto3" json:"resource_manager_build_version,omitempty"`
	StartTime                     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	State                         string                 `protobuf:"bytes,5,opt,name=state,proto3" json:"state,omitempty"`
	HaState                       string                 `protobuf:"bytes,6,opt,name=ha_state,json=haState,proto3" json:"ha_state,omitempty"`
	HaEnabled                     bool                   `protobuf:"varint,7,opt,name=ha_enabled,json=haEnabled,proto3" json:"ha_enabled,omitempty"`
	RmStateStore                  string                 `protobuf:"bytes,8,opt,name=rm_state_store,json=rmStateStore,proto3" json:"rm_state_store,omitempty"`
	ResourceManagerSchedulerClass string                 `protobuf:"bytes,9,opt,name=resource_manager_scheduler_class,json=resourceManagerSchedulerClass,proto3" json:"resource_manager_scheduler_class,omitempty"`
	unknownFields                 protoimpl.UnknownFields
	sizeCache                     protoimpl.SizeCache
}

func (x *ClusterInfo) Reset() {
	*x = ClusterInfo{}
	mi := &file_resourcemanager_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterInfo) ProtoMessage() {}

func (x *ClusterInfo) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterInfo.ProtoReflect.Descriptor instead.
func (*ClusterInfo) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{29}
}

func (x *ClusterInfo) GetClusterId() string {
	if x != nil {
		return x.ClusterId
	}
	return ""
}

func (x *ClusterInfo) GetRmVersion() string {
	if x != nil {
		return x.RmVersion
	}
	return ""
}

func (x *ClusterInfo) GetResourceManagerBuildVersion() string {
	if x != nil {
		return x.ResourceManagerBuildVersion
	}
	return ""
}

func (x *ClusterInfo) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ClusterInfo) GetState() string {
	if x != nil {
		return x.State
	}
	return ""
}

func (x *ClusterInfo) GetHaState() string {
	if x != nil {
		return x.HaState
	}
	return ""
}

func (x *ClusterInfo) GetHaEnabled() bool {
	if x != nil {
		return x.HaEnabled
	}
	return false
}

func (x *ClusterInfo) GetRmStateStore() string {
	if x != nil {
		return x.RmStateStore
	}
	return ""
}

func (x *ClusterInfo) GetResourceManagerSchedulerClass() string {
	if x != nil {
		return x.ResourceManagerSchedulerClass
	}
	return ""
}

// 集群指标
type ClusterMetrics struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	AppsSubmitted        int32                  `protobuf:"varint,1,opt,name=apps_submitted,json=appsSubmitted,proto3" json:"apps_submitted,omitempty"`
	AppsCompleted        int32                  `protobuf:"varint,2,opt,name=apps_completed,json=appsCompleted,proto3" json:"apps_completed,omitempty"`
	AppsPending          int32                  `protobuf:"varint,3,opt,name=apps_pending,json=appsPending,proto3" json:"apps_pending,omitempty"`
	AppsRunning          int32                  `protobuf:"varint,4,opt,name=apps_running,json=appsRunning,proto3" json:"apps_running,omitempty"`
	AppsFailed           int32                  `protobuf:"varint,5,opt,name=apps_failed,json=appsFailed,proto3" json:"apps_failed,omitempty"`
	AppsKilled           int32                  `protobuf:"varint,6,opt,name=apps_killed,json=appsKilled,proto3" json:"apps_killed,omitempty"`
	ReservedMemory       int64                  `protobuf:"varint,7,opt,name=reserved_memory,json=reservedMemory,proto3" json:"reserved_memory,omitempty"`
	AvailableMemory      int64                  `protobuf:"varint,8,opt,name=available_memory,json=availableMemory,proto3" json:"available_memory,omitempty"`
	AllocatedMemory      int64                  `protobuf:"varint,9,opt,name=allocated_memory,json=allocatedMemory,proto3" json:"allocated_memory,omitempty"`
	TotalMemory          int64                  `protobuf:"varint,10,opt,name=total_memory,json=totalMemory,proto3" json:"total_memory,omitempty"`
	ReservedVcores       int32                  `protobuf:"varint,11,opt,name=reserved_vcores,json=reservedVcores,proto3" json:"reserved_vcores,omitempty"`
	AvailableVcores      int32                  `protobuf:"varint,12,opt,name=available_vcores,json=availableVcores,proto3" json:"available_vcores,omitempty"`
	AllocatedVcores      int32                  `protobuf:"varint,13,opt,name=allocated_vcores,json=allocatedVcores,proto3" json:"allocated_vcores,omitempty"`
	TotalVcores          int32                  `protobuf:"varint,14,opt,name=total_vcores,json=totalVcores,proto3" json:"total_vcores,omitempty"`
	ContainersAllocated  int32                  `protobuf:"varint,15,opt,name=containers_allocated,json=containersAllocated,proto3" json:"containers_allocated,omitempty"`
	ContainersReserved   int32                  `protobuf:"varint,16,opt,name=containers_reserved,json=containersReserved,proto3" json:"containers_reserved,omitempty"`
	ContainersPending    int32                  `protobuf:"varint,17,opt,name=containers_pending,json=containersPending,proto3" json:"containers_pending,omitempty"`
	TotalNodes           int32                  `protobuf:"varint,18,opt,name=total_nodes,json=totalNodes,proto3" json:"total_nodes,omitempty"`
	ActiveNodes          int32                  `protobuf:"varint,19,opt,name=active_nodes,json=activeNodes,proto3" json:"active_nodes,omitempty"`
	LostNodes            int32                  `protobuf:"varint,20,opt,name=lost_nodes,json=lostNodes,proto3" json:"lost_nodes,omitempty"`
	UnhealthyNodes       int32                  `protobuf:"varint,21,opt,name=unhealthy_nodes,json=unhealthyNodes,proto3" json:"unhealthy_nodes,omitempty"`
	DecommissioningNodes int32                  `protobuf:"varint,22,opt,name=decommissioning_nodes,json=decommissioningNodes,proto3" json:"decommissioning_nodes,omitempty"`
	DecommissionedNodes  int32                  `protobuf:"varint,23,opt,name=decommissioned_nodes,json=decommissionedNodes,proto3" json:"decommissioned_nodes,omitempty"`
	RebootedNodes        int32                  `protobuf:"varint,24,opt,name=rebooted_nodes,json=rebootedNodes,proto3" json:"rebooted_nodes,omitempty"`
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ClusterMetrics) Reset() {
	*x = ClusterMetrics{}
	mi := &file_resourcemanager_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClusterMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClusterMetrics) ProtoMessage() {}

func (x *ClusterMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_resourcemanager_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClusterMetrics.ProtoReflect.Descriptor instead.
func (*ClusterMetrics) Descriptor() ([]byte, []int) {
	return file_resourcemanager_proto_rawDescGZIP(), []int{30}
}

func (x *ClusterMetrics) GetAppsSubmitted() int32 {
	if x != nil {
		return x.AppsSubmitted
	}
	return 0
}

func (x *ClusterMetrics) GetAppsCompleted() int32 {
	if x != nil {
		return x.AppsCompleted
	}
	return 0
}

func (x *ClusterMetrics) GetAppsPending() int32 {
	if x != nil {
		return x.AppsPending
	}
	return 0
}

func (x *ClusterMetrics) GetAppsRunning() int32 {
	if x != nil {
		return x.AppsRunning
	}
	return 0
}

func (x *ClusterMetrics) GetAppsFailed() int32 {
	if x != nil {
		return x.AppsFailed
	}
	return 0
}

func (x *ClusterMetrics) GetAppsKilled() int32 {
	if x != nil {
		return x.AppsKilled
	}
	return 0
}

func (x *ClusterMetrics) GetReservedMemory() int64 {
	if x != nil {
		return x.ReservedMemory
	}
	return 0
}

func (x *ClusterMetrics) GetAvailableMemory() int64 {
	if x != nil {
		return x.AvailableMemory
	}
	return 0
}

func (x *ClusterMetrics) GetAllocatedMemory() int64 {
	if x != nil {
		return x.AllocatedMemory
	}
	return 0
}

func (x *ClusterMetrics) GetTotalMemory() int64 {
	if x != nil {
		return x.TotalMemory
	}
	return 0
}

func (x *ClusterMetrics) GetReservedVcores() int32 {
	if x != nil {
		return x.ReservedVcores
	}
	return 0
}

func (x *ClusterMetrics) GetAvailableVcores() int32 {
	if x != nil {
		return x.AvailableVcores
	}
	return 0
}

func (x *ClusterMetrics) GetAllocatedVcores() int32 {
	if x != nil {
		return x.AllocatedVcores
	}
	return 0
}

func (x *ClusterMetrics) GetTotalVcores() int32 {
	if x != nil {
		return x.TotalVcores
	}
	return 0
}

func (x *ClusterMetrics) GetContainersAllocated() int32 {
	if x != nil {
		return x.ContainersAllocated
	}
	return 0
}

func (x *ClusterMetrics) GetContainersReserved() int32 {
	if x != nil {
		return x.ContainersReserved
	}
	return 0
}

func (x *ClusterMetrics) GetContainersPending() int32 {
	if x != nil {
		return x.ContainersPending
	}
	return 0
}

func (x *ClusterMetrics) GetTotalNodes() int32 {
	if x != nil {
		return x.TotalNodes
	}
	return 0
}

func (x *ClusterMetrics) GetActiveNodes() int32 {
	if x != nil {
		return x.ActiveNodes
	}
	return 0
}

func (x *ClusterMetrics) GetLostNodes() int32 {
	if x != nil {
		return x.LostNodes
	}
	return 0
}

func (x *ClusterMetrics) GetUnhealthyNodes() int32 {
	if x != nil {
		return x.UnhealthyNodes
	}
	return 0
}

func (x *ClusterMetrics) GetDecommissioningNodes() int32 {
	if x != nil {
		return x.DecommissioningNodes
	}
	return 0
}

func (x *ClusterMetrics) GetDecommissionedNodes() int32 {
	if x != nil {
		return x.DecommissionedNodes
	}
	return 0
}

func (x *ClusterMetrics) GetRebootedNodes() int32 {
	if x != nil {
		return x.RebootedNodes
	}
	return 0
}

var File_resourcemanager_proto protoreflect.FileDescriptor

const file_resourcemanager_proto_rawDesc = "" +
	"\n" +
	"\x15resourcemanager.proto\x12\x16carrot.resourcemanager\x1a\x1fgoogle/protobuf/timestamp.proto\"\xf1\x01\n" +
	"\x13RegisterNodeRequest\x12=\n" +
	"\tnode_info\x18\x01 \x01(\v2 .carrot.resourcemanager.NodeInfoR\bnodeInfo\x12U\n" +
	"\x10total_capability\x18\x02 \x01(\v2*.carrot.resourcemanager.ResourceCapabilityR\x0ftotalCapability\x12!\n" +
	"\fhttp_address\x18\x03 \x01(\tR\vhttpAddress\x12!\n" +
	"\fgrpc_address\x18\x04 \x01(\tR\vgrpcAddress\"\x9a\x01\n" +
	"\x14RegisterNodeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x17\n" +
	"\anode_id\x18\x03 \x01(\tR\x06nodeId\x125\n" +
	"\x16registration_timestamp\x18\x04 \x01(\x03R\x15registrationTimestamp\"\x83\x03\n" +
	"\x14NodeHeartbeatRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12L\n" +
	"\x0eused_resources\x18\x02 \x01(\v2%.carrot.resourcemanager.ResourceUsageR\rusedResources\x12V\n" +
	"\x12container_statuses\x18\x03 \x03(\v2'.carrot.resourcemanager.ContainerStatusR\x11containerStatuses\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12I\n" +
	"\rhealth_status\x18\x05 \x01(\v2$.carrot.resourcemanager.HealthStatusR\fhealthStatus\x12'\n" +
	"\x0fsequence_number\x18\x06 \x01(\x05R\x0esequenceNumber\"\x96\x02\n" +
	"\x15NodeHeartbeatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12T\n" +
	"\x11container_actions\x18\x03 \x03(\v2'.carrot.resourcemanager.ContainerActionR\x10containerActions\x12\x1f\n" +
	"\vresponse_id\x18\x04 \x01(\x03R\n" +
	"responseId\x12-\n" +
	"\x12heartbeat_interval\x18\x05 \x01(\x05R\x11heartbeatInterval\x12#\n" +
	"\rshould_resync\x18\x06 \x01(\bR\fshouldResync\"L\n" +
	"\x0fGetNodesRequest\x12!\n" +
	"\fstate_filter\x18\x01 \x01(\tR\vstateFilter\x12\x16\n" +
	"\x06labels\x18\x02 \x03(\tR\x06labels\"g\n" +
	"\x10GetNodesResponse\x122\n" +
	"\x05nodes\x18\x01 \x03(\v2\x1c.carrot.resourcemanager.NodeR\x05nodes\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\"\x81\x01\n" +
	"\x18SubmitApplicationRequest\x12e\n" +
	"\x13application_context\x18\x01 \x01(\v24.carrot.resourcemanager.ApplicationSubmissionContextR\x12applicationContext\"v\n" +
	"\x19SubmitApplicationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\x0eapplication_id\x18\x03 \x01(\tR\rapplicationId\"\x7f\n" +
	"\x16GetApplicationsRequest\x12\x16\n" +
	"\x06states\x18\x01 \x03(\tR\x06states\x12\x1f\n" +
	"\vuser_filter\x18\x02 \x01(\tR\n" +
	"userFilter\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\x12\x16\n" +
	"\x06offset\x18\x04 \x01(\x05R\x06offset\"\x83\x01\n" +
	"\x17GetApplicationsResponse\x12G\n" +
	"\fapplications\x18\x01 \x03(\v2#.carrot.resourcemanager.ApplicationR\fapplications\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount\">\n" +
	"\x15GetApplicationRequest\x12%\n" +
	"\x0eapplication_id\x18\x01 \x01(\tR\rapplicationId\"_\n" +
	"\x16GetApplicationResponse\x12E\n" +
	"\vapplication\x18\x01 \x01(\v2#.carrot.resourcemanager.ApplicationR\vapplication\"W\n" +
	"\x16KillApplicationRequest\x12%\n" +
	"\x0eapplication_id\x18\x01 \x01(\tR\rapplicationId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"M\n" +
	"\x17KillApplicationResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\x17\n" +
	"\x15GetClusterInfoRequest\"`\n" +
	"\x16GetClusterInfoResponse\x12F\n" +
	"\fcluster_info\x18\x01 \x01(\v2#.carrot.resourcemanager.ClusterInfoR\vclusterInfo\"\x1a\n" +
	"\x18GetClusterMetricsRequest\"l\n" +
	"\x19GetClusterMetricsResponse\x12O\n" +
	"\x0fcluster_metrics\x18\x01 \x01(\v2&.carrot.resourcemanager.ClusterMetricsR\x0eclusterMetrics\"\xea\x01\n" +
	"\bNodeInfo\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x03 \x01(\tR\tipAddress\x12\x12\n" +
	"\x04port\x18\x04 \x01(\x05R\x04port\x12\x1b\n" +
	"\track_name\x18\x05 \x01(\tR\brackName\x12\x16\n" +
	"\x06labels\x18\x06 \x03(\tR\x06labels\x12A\n" +
	"\x0elast_heartbeat\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\rlastHeartbeat\"\x95\x03\n" +
	"\x04Node\x12=\n" +
	"\tnode_info\x18\x01 \x01(\v2 .carrot.resourcemanager.NodeInfoR\bnodeInfo\x12U\n" +
	"\x10total_capability\x18\x02 \x01(\v2*.carrot.resourcemanager.ResourceCapabilityR\x0ftotalCapability\x12L\n" +
	"\x0eused_resources\x18\x03 \x01(\v2%.carrot.resourcemanager.ResourceUsageR\rusedResources\x127\n" +
	"\x05state\x18\x04 \x01(\x0e2!.carrot.resourcemanager.NodeStateR\x05state\x12I\n" +
	"\rhealth_status\x18\x05 \x01(\v2$.carrot.resourcemanager.HealthStatusR\fhealthStatus\x12%\n" +
	"\x0enum_containers\x18\x06 \x01(\x05R\rnumContainers\"\x81\x02\n" +
	"\x12ResourceCapability\x12\x1b\n" +
	"\tmemory_mb\x18\x01 \x01(\x03R\bmemoryMb\x12\x16\n" +
	"\x06vcores\x18\x02 \x01(\x05R\x06vcores\x12p\n" +
	"\x12extended_resources\x18\x03 \x03(\v2A.carrot.resourcemanager.ResourceCapability.ExtendedResourcesEntryR\x11extendedResources\x1aD\n" +
	"\x16ExtendedResourcesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xd5\x02\n" +
	"\rResourceUsage\x12\x1b\n" +
	"\tmemory_mb\x18\x01 \x01(\x03R\bmemoryMb\x12\x16\n" +
	"\x06vcores\x18\x02 \x01(\x05R\x06vcores\x12k\n" +
	"\x12extended_resources\x18\x03 \x03(\v2<.carrot.resourcemanager.ResourceUsage.ExtendedResourcesEntryR\x11extendedResources\x12*\n" +
	"\x11cpu_usage_percent\x18\x04 \x01(\x01R\x0fcpuUsagePercent\x120\n" +
	"\x14memory_usage_percent\x18\x05 \x01(\x01R\x12memoryUsagePercent\x1aD\n" +
	"\x16ExtendedResourcesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\x91\x04\n" +
	"\x1cApplicationSubmissionContext\x12)\n" +
	"\x10application_name\x18\x01 \x01(\tR\x0fapplicationName\x12\x14\n" +
	"\x05queue\x18\x02 \x01(\tR\x05queue\x12\x12\n" +
	"\x04user\x18\x03 \x01(\tR\x04user\x12O\n" +
	"\n" +
	"am_context\x18\x04 \x01(\v20.carrot.resourcemanager.ApplicationMasterContextR\tamContext\x12\x1a\n" +
	"\bpriority\x18\x05 \x01(\x05R\bpriority\x12t\n" +
	"\x10application_tags\x18\x06 \x03(\v2I.carrot.resourcemanager.ApplicationSubmissionContext.ApplicationTagsEntryR\x0fapplicationTags\x12(\n" +
	"\x10max_app_attempts\x18\a \x01(\x03R\x0emaxAppAttempts\x12K\n" +
	"\vam_resource\x18\b \x01(\v2*.carrot.resourcemanager.ResourceCapabilityR\n" +
	"amResource\x1aB\n" +
	"\x14ApplicationTagsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb0\x02\n" +
	"\x18ApplicationMasterContext\x12*\n" +
	"\x11am_container_spec\x18\x01 \x01(\tR\x0famContainerSpec\x12'\n" +
	"\x0flocal_resources\x18\x02 \x03(\tR\x0elocalResources\x12c\n" +
	"\venvironment\x18\x03 \x03(\v2A.carrot.resourcemanager.ApplicationMasterContext.EnvironmentEntryR\venvironment\x12\x1a\n" +
	"\bcommands\x18\x04 \x03(\tR\bcommands\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8f\x05\n" +
	"\vApplication\x12%\n" +
	"\x0eapplication_id\x18\x01 \x01(\tR\rapplicationId\x12)\n" +
	"\x10application_name\x18\x02 \x01(\tR\x0fapplicationName\x12\x12\n" +
	"\x04user\x18\x03 \x01(\tR\x04user\x12\x14\n" +
	"\x05queue\x18\x04 \x01(\tR\x05queue\x12>\n" +
	"\x05state\x18\x05 \x01(\x0e2(.carrot.resourcemanager.ApplicationStateR\x05state\x12\x1a\n" +
	"\bprogress\x18\x06 \x01(\x01R\bprogress\x12!\n" +
	"\ftracking_url\x18\a \x01(\tR\vtrackingUrl\x12 \n" +
	"\vdiagnostics\x18\b \x01(\tR\vdiagnostics\x129\n" +
	"\n" +
	"start_time\x18\t \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12;\n" +
	"\vfinish_time\x18\n" +
	" \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"finishTime\x12!\n" +
	"\ffinal_status\x18\v \x01(\tR\vfinalStatus\x12V\n" +
	"\x13allocated_resources\x18\f \x01(\v2%.carrot.resourcemanager.ResourceUsageR\x12allocatedResources\x12T\n" +
	"\x12reserved_resources\x18\r \x01(\v2%.carrot.resourcemanager.ResourceUsageR\x11reservedResources\x12\x1a\n" +
	"\bpriority\x18\x0e \x01(\x05R\bpriority\"\xb7\x03\n" +
	"\x0fContainerStatus\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12%\n" +
	"\x0eapplication_id\x18\x02 \x01(\tR\rapplicationId\x12<\n" +
	"\x05state\x18\x03 \x01(\x0e2&.carrot.resourcemanager.ContainerStateR\x05state\x12\x1b\n" +
	"\texit_code\x18\x04 \x01(\x05R\bexitCode\x12 \n" +
	"\vdiagnostics\x18\x05 \x01(\tR\vdiagnostics\x12L\n" +
	"\x0eresource_usage\x18\x06 \x01(\v2%.carrot.resourcemanager.ResourceUsageR\rresourceUsage\x129\n" +
	"\n" +
	"start_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12;\n" +
	"\vfinish_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"finishTime\x12\x17\n" +
	"\anode_id\x18\t \x01(\tR\x06nodeId\"\xec\x02\n" +
	"\x0fContainerAction\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12:\n" +
	"\x06action\x18\x02 \x01(\x0e2\".carrot.resourcemanager.ActionTypeR\x06action\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\x12F\n" +
	"\bresource\x18\x04 \x01(\v2*.carrot.resourcemanager.ResourceCapabilityR\bresource\x12Z\n" +
	"\venvironment\x18\x05 \x03(\v28.carrot.resourcemanager.ContainerAction.EnvironmentEntryR\venvironment\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x8b\x02\n" +
	"\fHealthStatus\x129\n" +
	"\x05state\x18\x01 \x01(\x0e2#.carrot.resourcemanager.HealthStateR\x05state\x12,\n" +
	"\x12last_health_report\x18\x02 \x01(\tR\x10lastHealthReport\x12H\n" +
	"\x12last_health_update\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x10lastHealthUpdate\x12H\n" +
	"\rhealth_checks\x18\x04 \x03(\v2#.carrot.resourcemanager.HealthCheckR\fhealthChecks\"\xb0\x01\n" +
	"\vHealthCheck\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x129\n" +
	"\x05state\x18\x02 \x01(\x0e2#.carrot.resourcemanager.HealthStateR\x05state\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x8a\x03\n" +
	"\vClusterInfo\x12\x1d\n" +
	"\n" +
	"cluster_id\x18\x01 \x01(\tR\tclusterId\x12\x1d\n" +
	"\n" +
	"rm_version\x18\x02 \x01(\tR\trmVersion\x12C\n" +
	"\x1eresource_manager_build_version\x18\x03 \x01(\tR\x1bresourceManagerBuildVersion\x129\n" +
	"\n" +
	"start_time\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12\x14\n" +
	"\x05state\x18\x05 \x01(\tR\x05state\x12\x19\n" +
	"\bha_state\x18\x06 \x01(\tR\ahaState\x12\x1d\n" +
	"\n" +
	"ha_enabled\x18\a \x01(\bR\thaEnabled\x12$\n" +
	"\x0erm_state_store\x18\b \x01(\tR\frmStateStore\x12G\n" +
	" resource_manager_scheduler_class\x18\t \x01(\tR\x1dresourceManagerSchedulerClass\"\xd8\a\n" +
	"\x0eClusterMetrics\x12%\n" +
	"\x0eapps_submitted\x18\x01 \x01(\x05R\rappsSubmitted\x12%\n" +
	"\x0eapps_completed\x18\x02 \x01(\x05R\rappsCompleted\x12!\n" +
	"\fapps_pending\x18\x03 \x01(\x05R\vappsPending\x12!\n" +
	"\fapps_running\x18\x04 \x01(\x05R\vappsRunning\x12\x1f\n" +
	"\vapps_failed\x18\x05 \x01(\x05R\n" +
	"appsFailed\x12\x1f\n" +
	"\vapps_killed\x18\x06 \x01(\x05R\n" +
	"appsKilled\x12'\n" +
	"\x0freserved_memory\x18\a \x01(\x03R\x0ereservedMemory\x12)\n" +
	"\x10available_memory\x18\b \x01(\x03R\x0favailableMemory\x12)\n" +
	"\x10allocated_memory\x18\t \x01(\x03R\x0fallocatedMemory\x12!\n" +
	"\ftotal_memory\x18\n" +
	" \x01(\x03R\vtotalMemory\x12'\n" +
	"\x0freserved_vcores\x18\v \x01(\x05R\x0ereservedVcores\x12)\n" +
	"\x10available_vcores\x18\f \x01(\x05R\x0favailableVcores\x12)\n" +
	"\x10allocated_vcores\x18\r \x01(\x05R\x0fallocatedVcores\x12!\n" +
	"\ftotal_vcores\x18\x0e \x01(\x05R\vtotalVcores\x121\n" +
	"\x14containers_allocated\x18\x0f \x01(\x05R\x13containersAllocated\x12/\n" +
	"\x13containers_reserved\x18\x10 \x01(\x05R\x12containersReserved\x12-\n" +
	"\x12containers_pending\x18\x11 \x01(\x05R\x11containersPending\x12\x1f\n" +
	"\vtotal_nodes\x18\x12 \x01(\x05R\n" +
	"totalNodes\x12!\n" +
	"\factive_nodes\x18\x13 \x01(\x05R\vactiveNodes\x12\x1d\n" +
	"\n" +
	"lost_nodes\x18\x14 \x01(\x05R\tlostNodes\x12'\n" +
	"\x0funhealthy_nodes\x18\x15 \x01(\x05R\x0eunhealthyNodes\x123\n" +
	"\x15decommissioning_nodes\x18\x16 \x01(\x05R\x14decommissioningNodes\x121\n" +
	"\x14decommissioned_nodes\x18\x17 \x01(\x05R\x13decommissionedNodes\x12%\n" +
	"\x0erebooted_nodes\x18\x18 \x01(\x05R\rrebootedNodes*\xda\x01\n" +
	"\tNodeState\x12\x1a\n" +
	"\x16NODE_STATE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eNODE_STATE_NEW\x10\x01\x12\x16\n" +
	"\x12NODE_STATE_RUNNING\x10\x02\x12\x18\n" +
	"\x14NODE_STATE_UNHEALTHY\x10\x03\x12\x1e\n" +
	"\x1aNODE_STATE_DECOMMISSIONING\x10\x04\x12\x1d\n" +
	"\x19NODE_STATE_DECOMMISSIONED\x10\x05\x12\x13\n" +
	"\x0fNODE_STATE_LOST\x10\x06\x12\x17\n" +
	"\x13NODE_STATE_REBOOTED\x10\a*\xae\x02\n" +
	"\x10ApplicationState\x12!\n" +
	"\x1dAPPLICATION_STATE_UNSPECIFIED\x10\x00\x12\x19\n" +
	"\x15APPLICATION_STATE_NEW\x10\x01\x12 \n" +
	"\x1cAPPLICATION_STATE_NEW_SAVING\x10\x02\x12\x1f\n" +
	"\x1bAPPLICATION_STATE_SUBMITTED\x10\x03\x12\x1e\n" +
	"\x1aAPPLICATION_STATE_ACCEPTED\x10\x04\x12\x1d\n" +
	"\x19APPLICATION_STATE_RUNNING\x10\x05\x12\x1e\n" +
	"\x1aAPPLICATION_STATE_FINISHED\x10\x06\x12\x1c\n" +
	"\x18APPLICATION_STATE_FAILED\x10\a\x12\x1c\n" +
	"\x18APPLICATION_STATE_KILLED\x10\b*\xbd\x01\n" +
	"\x0eContainerState\x12\x1f\n" +
	"\x1bCONTAINER_STATE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13CONTAINER_STATE_NEW\x10\x01\x12\x1b\n" +
	"\x17CONTAINER_STATE_RUNNING\x10\x02\x12\x1c\n" +
	"\x18CONTAINER_STATE_COMPLETE\x10\x03\x12\x1a\n" +
	"\x16CONTAINER_STATE_FAILED\x10\x04\x12\x1a\n" +
	"\x16CONTAINER_STATE_KILLED\x10\x05*\x86\x01\n" +
	"\n" +
	"ActionType\x12\x1b\n" +
	"\x17ACTION_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12ACTION_TYPE_LAUNCH\x10\x01\x12\x14\n" +
	"\x10ACTION_TYPE_STOP\x10\x02\x12\x14\n" +
	"\x10ACTION_TYPE_KILL\x10\x03\x12\x17\n" +
	"\x13ACTION_TYPE_CLEANUP\x10\x04*{\n" +
	"\vHealthState\x12\x1c\n" +
	"\x18HEALTH_STATE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14HEALTH_STATE_HEALTHY\x10\x01\x12\x1a\n" +
	"\x16HEALTH_STATE_UNHEALTHY\x10\x02\x12\x18\n" +
	"\x14HEALTH_STATE_UNKNOWN\x10\x032\x8e\b\n" +
	"\x16ResourceManagerService\x12i\n" +
	"\fRegisterNode\x12+.carrot.resourcemanager.RegisterNodeRequest\x1a,.carrot.resourcemanager.RegisterNodeResponse\x12l\n" +
	"\rNodeHeartbeat\x12,.carrot.resourcemanager.NodeHeartbeatRequest\x1a-.carrot.resourcemanager.NodeHeartbeatResponse\x12]\n" +
	"\bGetNodes\x12'.carrot.resourcemanager.GetNodesRequest\x1a(.carrot.resourcemanager.GetNodesResponse\x12x\n" +
	"\x11SubmitApplication\x120.carrot.resourcemanager.SubmitApplicationRequest\x1a1.carrot.resourcemanager.SubmitApplicationResponse\x12r\n" +
	"\x0fGetApplications\x12..carrot.resourcemanager.GetApplicationsRequest\x1a/.carrot.resourcemanager.GetApplicationsResponse\x12o\n" +
	"\x0eGetApplication\x12-.carrot.resourcemanager.GetApplicationRequest\x1a..carrot.resourcemanager.GetApplicationResponse\x12r\n" +
	"\x0fKillApplication\x12..carrot.resourcemanager.KillApplicationRequest\x1a/.carrot.resourcemanager.KillApplicationResponse\x12o\n" +
	"\x0eGetClusterInfo\x12-.carrot.resourcemanager.GetClusterInfoRequest\x1a..carrot.resourcemanager.GetClusterInfoResponse\x12x\n" +
	"\x11GetClusterMetrics\x120.carrot.resourcemanager.GetClusterMetricsRequest\x1a1.carrot.resourcemanager.GetClusterMetricsResponseB\"Z carrot/api/proto/resourcemanagerb\x06proto3"

var (
	file_resourcemanager_proto_rawDescOnce sync.Once
	file_resourcemanager_proto_rawDescData []byte
)

func file_resourcemanager_proto_rawDescGZIP() []byte {
	file_resourcemanager_proto_rawDescOnce.Do(func() {
		file_resourcemanager_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_resourcemanager_proto_rawDesc), len(file_resourcemanager_proto_rawDesc)))
	})
	return file_resourcemanager_proto_rawDescData
}

var file_resourcemanager_proto_enumTypes = make([]protoimpl.EnumInfo, 5)
var file_resourcemanager_proto_msgTypes = make([]protoimpl.MessageInfo, 36)
var file_resourcemanager_proto_goTypes = []any{
	(NodeState)(0),                       // 0: carrot.resourcemanager.NodeState
	(ApplicationState)(0),                // 1: carrot.resourcemanager.ApplicationState
	(ContainerState)(0),                  // 2: carrot.resourcemanager.ContainerState
	(ActionType)(0),                      // 3: carrot.resourcemanager.ActionType
	(HealthState)(0),                     // 4: carrot.resourcemanager.HealthState
	(*RegisterNodeRequest)(nil),          // 5: carrot.resourcemanager.RegisterNodeRequest
	(*RegisterNodeResponse)(nil),         // 6: carrot.resourcemanager.RegisterNodeResponse
	(*NodeHeartbeatRequest)(nil),         // 7: carrot.resourcemanager.NodeHeartbeatRequest
	(*NodeHeartbeatResponse)(nil),        // 8: carrot.resourcemanager.NodeHeartbeatResponse
	(*GetNodesRequest)(nil),              // 9: carrot.resourcemanager.GetNodesRequest
	(*GetNodesResponse)(nil),             // 10: carrot.resourcemanager.GetNodesResponse
	(*SubmitApplicationRequest)(nil),     // 11: carrot.resourcemanager.SubmitApplicationRequest
	(*SubmitApplicationResponse)(nil),    // 12: carrot.resourcemanager.SubmitApplicationResponse
	(*GetApplicationsRequest)(nil),       // 13: carrot.resourcemanager.GetApplicationsRequest
	(*GetApplicationsResponse)(nil),      // 14: carrot.resourcemanager.GetApplicationsResponse
	(*GetApplicationRequest)(nil),        // 15: carrot.resourcemanager.GetApplicationRequest
	(*GetApplicationResponse)(nil),       // 16: carrot.resourcemanager.GetApplicationResponse
	(*KillApplicationRequest)(nil),       // 17: carrot.resourcemanager.KillApplicationRequest
	(*KillApplicationResponse)(nil),      // 18: carrot.resourcemanager.KillApplicationResponse
	(*GetClusterInfoRequest)(nil),        // 19: carrot.resourcemanager.GetClusterInfoRequest
	(*GetClusterInfoResponse)(nil),       // 20: carrot.resourcemanager.GetClusterInfoResponse
	(*GetClusterMetricsRequest)(nil),     // 21: carrot.resourcemanager.GetClusterMetricsRequest
	(*GetClusterMetricsResponse)(nil),    // 22: carrot.resourcemanager.GetClusterMetricsResponse
	(*NodeInfo)(nil),                     // 23: carrot.resourcemanager.NodeInfo
	(*Node)(nil),                         // 24: carrot.resourcemanager.Node
	(*ResourceCapability)(nil),           // 25: carrot.resourcemanager.ResourceCapability
	(*ResourceUsage)(nil),                // 26: carrot.resourcemanager.ResourceUsage
	(*ApplicationSubmissionContext)(nil), // 27: carrot.resourcemanager.ApplicationSubmissionContext
	(*ApplicationMasterContext)(nil),     // 28: carrot.resourcemanager.ApplicationMasterContext
	(*Application)(nil),                  // 29: carrot.resourcemanager.Application
	(*ContainerStatus)(nil),              // 30: carrot.resourcemanager.ContainerStatus
	(*ContainerAction)(nil),              // 31: carrot.resourcemanager.ContainerAction
	(*HealthStatus)(nil),                 // 32: carrot.resourcemanager.HealthStatus
	(*HealthCheck)(nil),                  // 33: carrot.resourcemanager.HealthCheck
	(*ClusterInfo)(nil),                  // 34: carrot.resourcemanager.ClusterInfo
	(*ClusterMetrics)(nil),               // 35: carrot.resourcemanager.ClusterMetrics
	nil,                                  // 36: carrot.resourcemanager.ResourceCapability.ExtendedResourcesEntry
	nil,                                  // 37: carrot.resourcemanager.ResourceUsage.ExtendedResourcesEntry
	nil,                                  // 38: carrot.resourcemanager.ApplicationSubmissionContext.ApplicationTagsEntry
	nil,                                  // 39: carrot.resourcemanager.ApplicationMasterContext.EnvironmentEntry
	nil,                                  // 40: carrot.resourcemanager.ContainerAction.EnvironmentEntry
	(*timestamppb.Timestamp)(nil),        // 41: google.protobuf.Timestamp
}
var file_resourcemanager_proto_depIdxs = []int32{
	23, // 0: carrot.resourcemanager.RegisterNodeRequest.node_info:type_name -> carrot.resourcemanager.NodeInfo
	25, // 1: carrot.resourcemanager.RegisterNodeRequest.total_capability:type_name -> carrot.resourcemanager.ResourceCapability
	26, // 2: carrot.resourcemanager.NodeHeartbeatRequest.used_resources:type_name -> carrot.resourcemanager.ResourceUsage
	30, // 3: carrot.resourcemanager.NodeHeartbeatRequest.container_statuses:type_name -> carrot.resourcemanager.ContainerStatus
	41, // 4: carrot.resourcemanager.NodeHeartbeatRequest.timestamp:type_name -> google.protobuf.Timestamp
	32, // 5: carrot.resourcemanager.NodeHeartbeatRequest.health_status:type_name -> carrot.resourcemanager.HealthStatus
	31, // 6: carrot.resourcemanager.NodeHeartbeatResponse.container_actions:type_name -> carrot.resourcemanager.ContainerAction
	24, // 7: carrot.resourcemanager.GetNodesResponse.nodes:type_name -> carrot.resourcemanager.Node
	27, // 8: carrot.resourcemanager.SubmitApplicationRequest.application_context:type_name -> carrot.resourcemanager.ApplicationSubmissionContext
	29, // 9: carrot.resourcemanager.GetApplicationsResponse.applications:type_name -> carrot.resourcemanager.Application
	29, // 10: carrot.resourcemanager.GetApplicationResponse.application:type_name -> carrot.resourcemanager.Application
	34, // 11: carrot.resourcemanager.GetClusterInfoResponse.cluster_info:type_name -> carrot.resourcemanager.ClusterInfo
	35, // 12: carrot.resourcemanager.GetClusterMetricsResponse.cluster_metrics:type_name -> carrot.resourcemanager.ClusterMetrics
	41, // 13: carrot.resourcemanager.NodeInfo.last_heartbeat:type_name -> google.protobuf.Timestamp
	23, // 14: carrot.resourcemanager.Node.node_info:type_name -> carrot.resourcemanager.NodeInfo
	25, // 15: carrot.resourcemanager.Node.total_capability:type_name -> carrot.resourcemanager.ResourceCapability
	26, // 16: carrot.resourcemanager.Node.used_resources:type_name -> carrot.resourcemanager.ResourceUsage
	0,  // 17: carrot.resourcemanager.Node.state:type_name -> carrot.resourcemanager.NodeState
	32, // 18: carrot.resourcemanager.Node.health_status:type_name -> carrot.resourcemanager.HealthStatus
	36, // 19: carrot.resourcemanager.ResourceCapability.extended_resources:type_name -> carrot.resourcemanager.ResourceCapability.ExtendedResourcesEntry
	37, // 20: carrot.resourcemanager.ResourceUsage.extended_resources:type_name -> carrot.resourcemanager.ResourceUsage.ExtendedResourcesEntry
	28, // 21: carrot.resourcemanager.ApplicationSubmissionContext.am_context:type_name -> carrot.resourcemanager.ApplicationMasterContext
	38, // 22: carrot.resourcemanager.ApplicationSubmissionContext.application_tags:type_name -> carrot.resourcemanager.ApplicationSubmissionContext.ApplicationTagsEntry
	25, // 23: carrot.resourcemanager.ApplicationSubmissionContext.am_resource:type_name -> carrot.resourcemanager.ResourceCapability
	39, // 24: carrot.resourcemanager.ApplicationMasterContext.environment:type_name -> carrot.resourcemanager.ApplicationMasterContext.EnvironmentEntry
	1,  // 25: carrot.resourcemanager.Application.state:type_name -> carrot.resourcemanager.ApplicationState
	41, // 26: carrot.resourcemanager.Application.start_time:type_name -> google.protobuf.Timestamp
	41, // 27: carrot.resourcemanager.Application.finish_time:type_name -> google.protobuf.Timestamp
	26, // 28: carrot.resourcemanager.Application.allocated_resources:type_name -> carrot.resourcemanager.ResourceUsage
	26, // 29: carrot.resourcemanager.Application.reserved_resources:type_name -> carrot.resourcemanager.ResourceUsage
	2,  // 30: carrot.resourcemanager.ContainerStatus.state:type_name -> carrot.resourcemanager.ContainerState
	26, // 31: carrot.resourcemanager.ContainerStatus.resource_usage:type_name -> carrot.resourcemanager.ResourceUsage
	41, // 32: carrot.resourcemanager.ContainerStatus.start_time:type_name -> google.protobuf.Timestamp
	41, // 33: carrot.resourcemanager.ContainerStatus.finish_time:type_name -> google.protobuf.Timestamp
	3,  // 34: carrot.resourcemanager.ContainerAction.action:type_name -> carrot.resourcemanager.ActionType
	25, // 35: carrot.resourcemanager.ContainerAction.resource:type_name -> carrot.resourcemanager.ResourceCapability
	40, // 36: carrot.resourcemanager.ContainerAction.environment:type_name -> carrot.resourcemanager.ContainerAction.EnvironmentEntry
	4,  // 37: carrot.resourcemanager.HealthStatus.state:type_name -> carrot.resourcemanager.HealthState
	41, // 38: carrot.resourcemanager.HealthStatus.last_health_update:type_name -> google.protobuf.Timestamp
	33, // 39: carrot.resourcemanager.HealthStatus.health_checks:type_name -> carrot.resourcemanager.HealthCheck
	4,  // 40: carrot.resourcemanager.HealthCheck.state:type_name -> carrot.resourcemanager.HealthState
	41, // 41: carrot.resourcemanager.HealthCheck.timestamp:type_name -> google.protobuf.Timestamp
	41, // 42: carrot.resourcemanager.ClusterInfo.start_time:type_name -> google.protobuf.Timestamp
	5,  // 43: carrot.resourcemanager.ResourceManagerService.RegisterNode:input_type -> carrot.resourcemanager.RegisterNodeRequest
	7,  // 44: carrot.resourcemanager.ResourceManagerService.NodeHeartbeat:input_type -> carrot.resourcemanager.NodeHeartbeatRequest
	9,  // 45: carrot.resourcemanager.ResourceManagerService.GetNodes:input_type -> carrot.resourcemanager.GetNodesRequest
	11, // 46: carrot.resourcemanager.ResourceManagerService.SubmitApplication:input_type -> carrot.resourcemanager.SubmitApplicationRequest
	13, // 47: carrot.resourcemanager.ResourceManagerService.GetApplications:input_type -> carrot.resourcemanager.GetApplicationsRequest
	15, // 48: carrot.resourcemanager.ResourceManagerService.GetApplication:input_type -> carrot.resourcemanager.GetApplicationRequest
	17, // 49: carrot.resourcemanager.ResourceManagerService.KillApplication:input_type -> carrot.resourcemanager.KillApplicationRequest
	19, // 50: carrot.resourcemanager.ResourceManagerService.GetClusterInfo:input_type -> carrot.resourcemanager.GetClusterInfoRequest
	21, // 51: carrot.resourcemanager.ResourceManagerService.GetClusterMetrics:input_type -> carrot.resourcemanager.GetClusterMetricsRequest
	6,  // 52: carrot.resourcemanager.ResourceManagerService.RegisterNode:output_type -> carrot.resourcemanager.RegisterNodeResponse
	8,  // 53: carrot.resourcemanager.ResourceManagerService.NodeHeartbeat:output_type -> carrot.resourcemanager.NodeHeartbeatResponse
	10, // 54: carrot.resourcemanager.ResourceManagerService.GetNodes:output_type -> carrot.resourcemanager.GetNodesResponse
	12, // 55: carrot.resourcemanager.ResourceManagerService.SubmitApplication:output_type -> carrot.resourcemanager.SubmitApplicationResponse
	14, // 56: carrot.resourcemanager.ResourceManagerService.GetApplications:output_type -> carrot.resourcemanager.GetApplicationsResponse
	16, // 57: carrot.resourcemanager.ResourceManagerService.GetApplication:output_type -> carrot.resourcemanager.GetApplicationResponse
	18, // 58: carrot.resourcemanager.ResourceManagerService.KillApplication:output_type -> carrot.resourcemanager.KillApplicationResponse
	20, // 59: carrot.resourcemanager.ResourceManagerService.GetClusterInfo:output_type -> carrot.resourcemanager.GetClusterInfoResponse
	22, // 60: carrot.resourcemanager.ResourceManagerService.GetClusterMetrics:output_type -> carrot.resourcemanager.GetClusterMetricsResponse
	52, // [52:61] is the sub-list for method output_type
	43, // [43:52] is the sub-list for method input_type
	43, // [43:43] is the sub-list for extension type_name
	43, // [43:43] is the sub-list for extension extendee
	0,  // [0:43] is the sub-list for field type_name
}

func init() { file_resourcemanager_proto_init() }
func file_resourcemanager_proto_init() {
	if File_resourcemanager_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_resourcemanager_proto_rawDesc), len(file_resourcemanager_proto_rawDesc)),
			NumEnums:      5,
			NumMessages:   36,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_resourcemanager_proto_goTypes,
		DependencyIndexes: file_resourcemanager_proto_depIdxs,
		EnumInfos:         file_resourcemanager_proto_enumTypes,
		MessageInfos:      file_resourcemanager_proto_msgTypes,
	}.Build()
	File_resourcemanager_proto = out.File
	file_resourcemanager_proto_goTypes = nil
	file_resourcemanager_proto_depIdxs = nil
}
