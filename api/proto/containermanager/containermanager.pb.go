// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v4.25.3
// source: containermanager.proto

package containermanager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 容器状态
type ContainerState int32

const (
	ContainerState_CONTAINER_NEW      ContainerState = 0
	ContainerState_CONTAINER_RUNNING  ContainerState = 1
	ContainerState_CONTAINER_COMPLETE ContainerState = 2
	ContainerState_CONTAINER_FAILED   ContainerState = 3
	ContainerState_CONTAINER_KILLED   ContainerState = 4
)

// Enum value maps for ContainerState.
var (
	ContainerState_name = map[int32]string{
		0: "CONTAINER_NEW",
		1: "CONTAINER_RUNNING",
		2: "CONTAINER_COMPLETE",
		3: "CONTAINER_FAILED",
		4: "CONTAINER_KILLED",
	}
	ContainerState_value = map[string]int32{
		"CONTAINER_NEW":      0,
		"CONTAINER_RUNNING":  1,
		"CONTAINER_COMPLETE": 2,
		"CONTAINER_FAILED":   3,
		"CONTAINER_KILLED":   4,
	}
)

func (x ContainerState) Enum() *ContainerState {
	p := new(ContainerState)
	*p = x
	return p
}

func (x ContainerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContainerState) Descriptor() protoreflect.EnumDescriptor {
	return file_containermanager_proto_enumTypes[0].Descriptor()
}

func (ContainerState) Type() protoreflect.EnumType {
	return &file_containermanager_proto_enumTypes[0]
}

func (x ContainerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContainerState.Descriptor instead.
func (ContainerState) EnumDescriptor() ([]byte, []int) {
	return file_containermanager_proto_rawDescGZIP(), []int{0}
}

// 资源定义
type Resource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MemoryMb      int64                  `protobuf:"varint,1,opt,name=memory_mb,json=memoryMb,proto3" json:"memory_mb,omitempty"` // 内存，MB
	Vcores        int32                  `protobuf:"varint,2,opt,name=vcores,proto3" json:"vcores,omitempty"`                     // 虚拟核心数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Resource) Reset() {
	*x = Resource{}
	mi := &file_containermanager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Resource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Resource) ProtoMessage() {}

func (x *Resource) ProtoReflect() protoreflect.Message {
	mi := &file_containermanager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Resource.ProtoReflect.Descriptor instead.
func (*Resource) Descriptor() ([]byte, []int) {
	return file_containermanager_proto_rawDescGZIP(), []int{0}
}

func (x *Resource) GetMemoryMb() int64 {
	if x != nil {
		return x.MemoryMb
	}
	return 0
}

func (x *Resource) GetVcores() int32 {
	if x != nil {
		return x.Vcores
	}
	return 0
}

// 容器ID
type ContainerID struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	ApplicationAttemptId string                 `protobuf:"bytes,1,opt,name=application_attempt_id,json=applicationAttemptId,proto3" json:"application_attempt_id,omitempty"` // 应用尝试ID
	ContainerId          int64                  `protobuf:"varint,2,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`                             // 容器ID
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *ContainerID) Reset() {
	*x = ContainerID{}
	mi := &file_containermanager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerID) ProtoMessage() {}

func (x *ContainerID) ProtoReflect() protoreflect.Message {
	mi := &file_containermanager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerID.ProtoReflect.Descriptor instead.
func (*ContainerID) Descriptor() ([]byte, []int) {
	return file_containermanager_proto_rawDescGZIP(), []int{1}
}

func (x *ContainerID) GetApplicationAttemptId() string {
	if x != nil {
		return x.ApplicationAttemptId
	}
	return ""
}

func (x *ContainerID) GetContainerId() int64 {
	if x != nil {
		return x.ContainerId
	}
	return 0
}

// 节点ID
type NodeID struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Host          string                 `protobuf:"bytes,1,opt,name=host,proto3" json:"host,omitempty"`  // 主机名
	Port          int32                  `protobuf:"varint,2,opt,name=port,proto3" json:"port,omitempty"` // 端口
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeID) Reset() {
	*x = NodeID{}
	mi := &file_containermanager_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeID) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeID) ProtoMessage() {}

func (x *NodeID) ProtoReflect() protoreflect.Message {
	mi := &file_containermanager_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeID.ProtoReflect.Descriptor instead.
func (*NodeID) Descriptor() ([]byte, []int) {
	return file_containermanager_proto_rawDescGZIP(), []int{2}
}

func (x *NodeID) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *NodeID) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

// 容器启动上下文
type ContainerLaunchContext struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Commands         []string               `protobuf:"bytes,1,rep,name=commands,proto3" json:"commands,omitempty"`                                                                                                    // 启动命令
	Environment      map[string]string      `protobuf:"bytes,2,rep,name=environment,proto3" json:"environment,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`                    // 环境变量
	LocalResources   []*LocalResource       `protobuf:"bytes,3,rep,name=local_resources,json=localResources,proto3" json:"local_resources,omitempty"`                                                                  // 本地资源
	WorkingDirectory string                 `protobuf:"bytes,4,opt,name=working_directory,json=workingDirectory,proto3" json:"working_directory,omitempty"`                                                            // 工作目录
	ServiceData      map[string]string      `protobuf:"bytes,5,rep,name=service_data,json=serviceData,proto3" json:"service_data,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 服务数据
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ContainerLaunchContext) Reset() {
	*x = ContainerLaunchContext{}
	mi := &file_containermanager_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerLaunchContext) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerLaunchContext) ProtoMessage() {}

func (x *ContainerLaunchContext) ProtoReflect() protoreflect.Message {
	mi := &file_containermanager_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerLaunchContext.ProtoReflect.Descriptor instead.
func (*ContainerLaunchContext) Descriptor() ([]byte, []int) {
	return file_containermanager_proto_rawDescGZIP(), []int{3}
}

func (x *ContainerLaunchContext) GetCommands() []string {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *ContainerLaunchContext) GetEnvironment() map[string]string {
	if x != nil {
		return x.Environment
	}
	return nil
}

func (x *ContainerLaunchContext) GetLocalResources() []*LocalResource {
	if x != nil {
		return x.LocalResources
	}
	return nil
}

func (x *ContainerLaunchContext) GetWorkingDirectory() string {
	if x != nil {
		return x.WorkingDirectory
	}
	return ""
}

func (x *ContainerLaunchContext) GetServiceData() map[string]string {
	if x != nil {
		return x.ServiceData
	}
	return nil
}

// 本地资源
type LocalResource struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Url           string                 `protobuf:"bytes,1,opt,name=url,proto3" json:"url,omitempty"`               // 资源URL
	Size          int64                  `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`            // 文件大小
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`   // 时间戳
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`             // 资源类型 (FILE, ARCHIVE等)
	Visibility    string                 `protobuf:"bytes,5,opt,name=visibility,proto3" json:"visibility,omitempty"` // 可见性 (PUBLIC, PRIVATE, APPLICATION)
	Pattern       string                 `protobuf:"bytes,6,opt,name=pattern,proto3" json:"pattern,omitempty"`       // 解压模式
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LocalResource) Reset() {
	*x = LocalResource{}
	mi := &file_containermanager_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LocalResource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LocalResource) ProtoMessage() {}

func (x *LocalResource) ProtoReflect() protoreflect.Message {
	mi := &file_containermanager_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LocalResource.ProtoReflect.Descriptor instead.
func (*LocalResource) Descriptor() ([]byte, []int) {
	return file_containermanager_proto_rawDescGZIP(), []int{4}
}

func (x *LocalResource) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *LocalResource) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *LocalResource) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *LocalResource) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *LocalResource) GetVisibility() string {
	if x != nil {
		return x.Visibility
	}
	return ""
}

func (x *LocalResource) GetPattern() string {
	if x != nil {
		return x.Pattern
	}
	return ""
}

// 容器状态信息
type ContainerStatus struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	ContainerId       *ContainerID           `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	State             ContainerState         `protobuf:"varint,2,opt,name=state,proto3,enum=containermanager.ContainerState" json:"state,omitempty"`
	ExitCode          int32                  `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Diagnostics       string                 `protobuf:"bytes,4,opt,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	StartTime         *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime        *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	AllocatedResource *Resource              `protobuf:"bytes,7,opt,name=allocated_resource,json=allocatedResource,proto3" json:"allocated_resource,omitempty"`
	NodeHttpAddress   string                 `protobuf:"bytes,8,opt,name=node_http_address,json=nodeHttpAddress,proto3" json:"node_http_address,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ContainerStatus) Reset() {
	*x = ContainerStatus{}
	mi := &file_containermanager_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStatus) ProtoMessage() {}

func (x *ContainerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_containermanager_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStatus.ProtoReflect.Descriptor instead.
func (*ContainerStatus) Descriptor() ([]byte, []int) {
	return file_containermanager_proto_rawDescGZIP(), []int{5}
}

func (x *ContainerStatus) GetContainerId() *ContainerID {
	if x != nil {
		return x.ContainerId
	}
	return nil
}

func (x *ContainerStatus) GetState() ContainerState {
	if x != nil {
		return x.State
	}
	return ContainerState_CONTAINER_NEW
}

func (x *ContainerStatus) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ContainerStatus) GetDiagnostics() string {
	if x != nil {
		return x.Diagnostics
	}
	return ""
}

func (x *ContainerStatus) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ContainerStatus) GetFinishTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishTime
	}
	return nil
}

func (x *ContainerStatus) GetAllocatedResource() *Resource {
	if x != nil {
		return x.AllocatedResource
	}
	return nil
}

func (x *ContainerStatus) GetNodeHttpAddress() string {
	if x != nil {
		return x.NodeHttpAddress
	}
	return ""
}

// 容器信息
type Container struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Id             *ContainerID           `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	NodeId         *NodeID                `protobuf:"bytes,2,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Resource       *Resource              `protobuf:"bytes,3,opt,name=resource,proto3" json:"resource,omitempty"`
	ContainerToken string                 `protobuf:"bytes,4,opt,name=container_token,json=containerToken,proto3" json:"container_token,omitempty"`
	State          ContainerState         `protobuf:"varint,5,opt,name=state,proto3,enum=containermanager.ContainerState" json:"state,omitempty"`
	Diagnostics    string                 `protobuf:"bytes,6,opt,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *Container) Reset() {
	*x = Container{}
	mi := &file_containermanager_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Container) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Container) ProtoMessage() {}

func (x *Container) ProtoReflect() protoreflect.Message {
	mi := &file_containermanager_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Container.ProtoReflect.Descriptor instead.
func (*Container) Descriptor() ([]byte, []int) {
	return file_containermanager_proto_rawDescGZIP(), []int{6}
}

func (x *Container) GetId() *ContainerID {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *Container) GetNodeId() *NodeID {
	if x != nil {
		return x.NodeId
	}
	return nil
}

func (x *Container) GetResource() *Resource {
	if x != nil {
		return x.Resource
	}
	return nil
}

func (x *Container) GetContainerToken() string {
	if x != nil {
		return x.ContainerToken
	}
	return ""
}

func (x *Container) GetState() ContainerState {
	if x != nil {
		return x.State
	}
	return ContainerState_CONTAINER_NEW
}

func (x *Container) GetDiagnostics() string {
	if x != nil {
		return x.Diagnostics
	}
	return ""
}

// StartContainer 请求
type StartContainerRequest struct {
	state             protoimpl.MessageState  `protogen:"open.v1"`
	ContainerId       *ContainerID            `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	LaunchContext     *ContainerLaunchContext `protobuf:"bytes,2,opt,name=launch_context,json=launchContext,proto3" json:"launch_context,omitempty"`
	AllocatedResource *Resource               `protobuf:"bytes,3,opt,name=allocated_resource,json=allocatedResource,proto3" json:"allocated_resource,omitempty"`
	ContainerToken    string                  `protobuf:"bytes,4,opt,name=container_token,json=containerToken,proto3" json:"container_token,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StartContainerRequest) Reset() {
	*x = StartContainerRequest{}
	mi := &file_containermanager_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartContainerRequest) ProtoMessage() {}

func (x *StartContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_containermanager_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartContainerRequest.ProtoReflect.Descriptor instead.
func (*StartContainerRequest) Descriptor() ([]byte, []int) {
	return file_containermanager_proto_rawDescGZIP(), []int{7}
}

func (x *StartContainerRequest) GetContainerId() *ContainerID {
	if x != nil {
		return x.ContainerId
	}
	return nil
}

func (x *StartContainerRequest) GetLaunchContext() *ContainerLaunchContext {
	if x != nil {
		return x.LaunchContext
	}
	return nil
}

func (x *StartContainerRequest) GetAllocatedResource() *Resource {
	if x != nil {
		return x.AllocatedResource
	}
	return nil
}

func (x *StartContainerRequest) GetContainerToken() string {
	if x != nil {
		return x.ContainerToken
	}
	return ""
}

// StartContainer 响应
type StartContainerResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Success         bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message         string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	NodeHttpAddress string                 `protobuf:"bytes,3,opt,name=node_http_address,json=nodeHttpAddress,proto3" json:"node_http_address,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *StartContainerResponse) Reset() {
	*x = StartContainerResponse{}
	mi := &file_containermanager_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StartContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StartContainerResponse) ProtoMessage() {}

func (x *StartContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_containermanager_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StartContainerResponse.ProtoReflect.Descriptor instead.
func (*StartContainerResponse) Descriptor() ([]byte, []int) {
	return file_containermanager_proto_rawDescGZIP(), []int{8}
}

func (x *StartContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StartContainerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *StartContainerResponse) GetNodeHttpAddress() string {
	if x != nil {
		return x.NodeHttpAddress
	}
	return ""
}

// StopContainer 请求
type StopContainerRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   *ContainerID           `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopContainerRequest) Reset() {
	*x = StopContainerRequest{}
	mi := &file_containermanager_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopContainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopContainerRequest) ProtoMessage() {}

func (x *StopContainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_containermanager_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopContainerRequest.ProtoReflect.Descriptor instead.
func (*StopContainerRequest) Descriptor() ([]byte, []int) {
	return file_containermanager_proto_rawDescGZIP(), []int{9}
}

func (x *StopContainerRequest) GetContainerId() *ContainerID {
	if x != nil {
		return x.ContainerId
	}
	return nil
}

// StopContainer 响应
type StopContainerResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopContainerResponse) Reset() {
	*x = StopContainerResponse{}
	mi := &file_containermanager_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopContainerResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopContainerResponse) ProtoMessage() {}

func (x *StopContainerResponse) ProtoReflect() protoreflect.Message {
	mi := &file_containermanager_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopContainerResponse.ProtoReflect.Descriptor instead.
func (*StopContainerResponse) Descriptor() ([]byte, []int) {
	return file_containermanager_proto_rawDescGZIP(), []int{10}
}

func (x *StopContainerResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopContainerResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// GetContainerStatus 请求
type GetContainerStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   *ContainerID           `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerStatusRequest) Reset() {
	*x = GetContainerStatusRequest{}
	mi := &file_containermanager_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerStatusRequest) ProtoMessage() {}

func (x *GetContainerStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_containermanager_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerStatusRequest.ProtoReflect.Descriptor instead.
func (*GetContainerStatusRequest) Descriptor() ([]byte, []int) {
	return file_containermanager_proto_rawDescGZIP(), []int{11}
}

func (x *GetContainerStatusRequest) GetContainerId() *ContainerID {
	if x != nil {
		return x.ContainerId
	}
	return nil
}

// GetContainerStatus 响应
type GetContainerStatusResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	ContainerStatus *ContainerStatus       `protobuf:"bytes,1,opt,name=container_status,json=containerStatus,proto3" json:"container_status,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *GetContainerStatusResponse) Reset() {
	*x = GetContainerStatusResponse{}
	mi := &file_containermanager_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerStatusResponse) ProtoMessage() {}

func (x *GetContainerStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_containermanager_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerStatusResponse.ProtoReflect.Descriptor instead.
func (*GetContainerStatusResponse) Descriptor() ([]byte, []int) {
	return file_containermanager_proto_rawDescGZIP(), []int{12}
}

func (x *GetContainerStatusResponse) GetContainerStatus() *ContainerStatus {
	if x != nil {
		return x.ContainerStatus
	}
	return nil
}

// GetContainerLogs 请求
type GetContainerLogsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   *ContainerID           `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	LogType       string                 `protobuf:"bytes,2,opt,name=log_type,json=logType,proto3" json:"log_type,omitempty"`              // stdout, stderr, syslog等
	StartOffset   int64                  `protobuf:"varint,3,opt,name=start_offset,json=startOffset,proto3" json:"start_offset,omitempty"` // 开始偏移量
	Length        int64                  `protobuf:"varint,4,opt,name=length,proto3" json:"length,omitempty"`                              // 读取长度，-1表示全部
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerLogsRequest) Reset() {
	*x = GetContainerLogsRequest{}
	mi := &file_containermanager_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerLogsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerLogsRequest) ProtoMessage() {}

func (x *GetContainerLogsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_containermanager_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerLogsRequest.ProtoReflect.Descriptor instead.
func (*GetContainerLogsRequest) Descriptor() ([]byte, []int) {
	return file_containermanager_proto_rawDescGZIP(), []int{13}
}

func (x *GetContainerLogsRequest) GetContainerId() *ContainerID {
	if x != nil {
		return x.ContainerId
	}
	return nil
}

func (x *GetContainerLogsRequest) GetLogType() string {
	if x != nil {
		return x.LogType
	}
	return ""
}

func (x *GetContainerLogsRequest) GetStartOffset() int64 {
	if x != nil {
		return x.StartOffset
	}
	return 0
}

func (x *GetContainerLogsRequest) GetLength() int64 {
	if x != nil {
		return x.Length
	}
	return 0
}

// GetContainerLogs 响应
type GetContainerLogsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LogContent    string                 `protobuf:"bytes,1,opt,name=log_content,json=logContent,proto3" json:"log_content,omitempty"`
	TotalSize     int64                  `protobuf:"varint,2,opt,name=total_size,json=totalSize,proto3" json:"total_size,omitempty"`
	HasMore       bool                   `protobuf:"varint,3,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetContainerLogsResponse) Reset() {
	*x = GetContainerLogsResponse{}
	mi := &file_containermanager_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetContainerLogsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetContainerLogsResponse) ProtoMessage() {}

func (x *GetContainerLogsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_containermanager_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetContainerLogsResponse.ProtoReflect.Descriptor instead.
func (*GetContainerLogsResponse) Descriptor() ([]byte, []int) {
	return file_containermanager_proto_rawDescGZIP(), []int{14}
}

func (x *GetContainerLogsResponse) GetLogContent() string {
	if x != nil {
		return x.LogContent
	}
	return ""
}

func (x *GetContainerLogsResponse) GetTotalSize() int64 {
	if x != nil {
		return x.TotalSize
	}
	return 0
}

func (x *GetContainerLogsResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// ListContainers 请求
type ListContainersRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 可以添加过滤条件
	StateFilter   ContainerState `protobuf:"varint,1,opt,name=state_filter,json=stateFilter,proto3,enum=containermanager.ContainerState" json:"state_filter,omitempty"` // 状态过滤，0表示不过滤
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContainersRequest) Reset() {
	*x = ListContainersRequest{}
	mi := &file_containermanager_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContainersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainersRequest) ProtoMessage() {}

func (x *ListContainersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_containermanager_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainersRequest.ProtoReflect.Descriptor instead.
func (*ListContainersRequest) Descriptor() ([]byte, []int) {
	return file_containermanager_proto_rawDescGZIP(), []int{15}
}

func (x *ListContainersRequest) GetStateFilter() ContainerState {
	if x != nil {
		return x.StateFilter
	}
	return ContainerState_CONTAINER_NEW
}

// ListContainers 响应
type ListContainersResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Containers    []*Container           `protobuf:"bytes,1,rep,name=containers,proto3" json:"containers,omitempty"`
	TotalCount    int32                  `protobuf:"varint,2,opt,name=total_count,json=totalCount,proto3" json:"total_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListContainersResponse) Reset() {
	*x = ListContainersResponse{}
	mi := &file_containermanager_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListContainersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListContainersResponse) ProtoMessage() {}

func (x *ListContainersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_containermanager_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListContainersResponse.ProtoReflect.Descriptor instead.
func (*ListContainersResponse) Descriptor() ([]byte, []int) {
	return file_containermanager_proto_rawDescGZIP(), []int{16}
}

func (x *ListContainersResponse) GetContainers() []*Container {
	if x != nil {
		return x.Containers
	}
	return nil
}

func (x *ListContainersResponse) GetTotalCount() int32 {
	if x != nil {
		return x.TotalCount
	}
	return 0
}

var File_containermanager_proto protoreflect.FileDescriptor

const file_containermanager_proto_rawDesc = "" +
	"\n" +
	"\x16containermanager.proto\x12\x10containermanager\x1a\x1fgoogle/protobuf/timestamp.proto\"?\n" +
	"\bResource\x12\x1b\n" +
	"\tmemory_mb\x18\x01 \x01(\x03R\bmemoryMb\x12\x16\n" +
	"\x06vcores\x18\x02 \x01(\x05R\x06vcores\"f\n" +
	"\vContainerID\x124\n" +
	"\x16application_attempt_id\x18\x01 \x01(\tR\x14applicationAttemptId\x12!\n" +
	"\fcontainer_id\x18\x02 \x01(\x03R\vcontainerId\"0\n" +
	"\x06NodeID\x12\x12\n" +
	"\x04host\x18\x01 \x01(\tR\x04host\x12\x12\n" +
	"\x04port\x18\x02 \x01(\x05R\x04port\"\xe6\x03\n" +
	"\x16ContainerLaunchContext\x12\x1a\n" +
	"\bcommands\x18\x01 \x03(\tR\bcommands\x12[\n" +
	"\venvironment\x18\x02 \x03(\v29.containermanager.ContainerLaunchContext.EnvironmentEntryR\venvironment\x12H\n" +
	"\x0flocal_resources\x18\x03 \x03(\v2\x1f.containermanager.LocalResourceR\x0elocalResources\x12+\n" +
	"\x11working_directory\x18\x04 \x01(\tR\x10workingDirectory\x12\\\n" +
	"\fservice_data\x18\x05 \x03(\v29.containermanager.ContainerLaunchContext.ServiceDataEntryR\vserviceData\x1a>\n" +
	"\x10EnvironmentEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10ServiceDataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xbd\x01\n" +
	"\rLocalResource\x12\x10\n" +
	"\x03url\x18\x01 \x01(\tR\x03url\x12\x12\n" +
	"\x04size\x18\x02 \x01(\x03R\x04size\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12\x12\n" +
	"\x04type\x18\x04 \x01(\tR\x04type\x12\x1e\n" +
	"\n" +
	"visibility\x18\x05 \x01(\tR\n" +
	"visibility\x12\x18\n" +
	"\apattern\x18\x06 \x01(\tR\apattern\"\xb9\x03\n" +
	"\x0fContainerStatus\x12@\n" +
	"\fcontainer_id\x18\x01 \x01(\v2\x1d.containermanager.ContainerIDR\vcontainerId\x126\n" +
	"\x05state\x18\x02 \x01(\x0e2 .containermanager.ContainerStateR\x05state\x12\x1b\n" +
	"\texit_code\x18\x03 \x01(\x05R\bexitCode\x12 \n" +
	"\vdiagnostics\x18\x04 \x01(\tR\vdiagnostics\x129\n" +
	"\n" +
	"start_time\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12;\n" +
	"\vfinish_time\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"finishTime\x12I\n" +
	"\x12allocated_resource\x18\a \x01(\v2\x1a.containermanager.ResourceR\x11allocatedResource\x12*\n" +
	"\x11node_http_address\x18\b \x01(\tR\x0fnodeHttpAddress\"\xa8\x02\n" +
	"\tContainer\x12-\n" +
	"\x02id\x18\x01 \x01(\v2\x1d.containermanager.ContainerIDR\x02id\x121\n" +
	"\anode_id\x18\x02 \x01(\v2\x18.containermanager.NodeIDR\x06nodeId\x126\n" +
	"\bresource\x18\x03 \x01(\v2\x1a.containermanager.ResourceR\bresource\x12'\n" +
	"\x0fcontainer_token\x18\x04 \x01(\tR\x0econtainerToken\x126\n" +
	"\x05state\x18\x05 \x01(\x0e2 .containermanager.ContainerStateR\x05state\x12 \n" +
	"\vdiagnostics\x18\x06 \x01(\tR\vdiagnostics\"\x9e\x02\n" +
	"\x15StartContainerRequest\x12@\n" +
	"\fcontainer_id\x18\x01 \x01(\v2\x1d.containermanager.ContainerIDR\vcontainerId\x12O\n" +
	"\x0elaunch_context\x18\x02 \x01(\v2(.containermanager.ContainerLaunchContextR\rlaunchContext\x12I\n" +
	"\x12allocated_resource\x18\x03 \x01(\v2\x1a.containermanager.ResourceR\x11allocatedResource\x12'\n" +
	"\x0fcontainer_token\x18\x04 \x01(\tR\x0econtainerToken\"x\n" +
	"\x16StartContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12*\n" +
	"\x11node_http_address\x18\x03 \x01(\tR\x0fnodeHttpAddress\"X\n" +
	"\x14StopContainerRequest\x12@\n" +
	"\fcontainer_id\x18\x01 \x01(\v2\x1d.containermanager.ContainerIDR\vcontainerId\"K\n" +
	"\x15StopContainerResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"]\n" +
	"\x19GetContainerStatusRequest\x12@\n" +
	"\fcontainer_id\x18\x01 \x01(\v2\x1d.containermanager.ContainerIDR\vcontainerId\"j\n" +
	"\x1aGetContainerStatusResponse\x12L\n" +
	"\x10container_status\x18\x01 \x01(\v2!.containermanager.ContainerStatusR\x0fcontainerStatus\"\xb1\x01\n" +
	"\x17GetContainerLogsRequest\x12@\n" +
	"\fcontainer_id\x18\x01 \x01(\v2\x1d.containermanager.ContainerIDR\vcontainerId\x12\x19\n" +
	"\blog_type\x18\x02 \x01(\tR\alogType\x12!\n" +
	"\fstart_offset\x18\x03 \x01(\x03R\vstartOffset\x12\x16\n" +
	"\x06length\x18\x04 \x01(\x03R\x06length\"u\n" +
	"\x18GetContainerLogsResponse\x12\x1f\n" +
	"\vlog_content\x18\x01 \x01(\tR\n" +
	"logContent\x12\x1d\n" +
	"\n" +
	"total_size\x18\x02 \x01(\x03R\ttotalSize\x12\x19\n" +
	"\bhas_more\x18\x03 \x01(\bR\ahasMore\"\\\n" +
	"\x15ListContainersRequest\x12C\n" +
	"\fstate_filter\x18\x01 \x01(\x0e2 .containermanager.ContainerStateR\vstateFilter\"v\n" +
	"\x16ListContainersResponse\x12;\n" +
	"\n" +
	"containers\x18\x01 \x03(\v2\x1b.containermanager.ContainerR\n" +
	"containers\x12\x1f\n" +
	"\vtotal_count\x18\x02 \x01(\x05R\n" +
	"totalCount*~\n" +
	"\x0eContainerState\x12\x11\n" +
	"\rCONTAINER_NEW\x10\x00\x12\x15\n" +
	"\x11CONTAINER_RUNNING\x10\x01\x12\x16\n" +
	"\x12CONTAINER_COMPLETE\x10\x02\x12\x14\n" +
	"\x10CONTAINER_FAILED\x10\x03\x12\x14\n" +
	"\x10CONTAINER_KILLED\x10\x042\xa1\x04\n" +
	"\x17ContainerManagerService\x12c\n" +
	"\x0eStartContainer\x12'.containermanager.StartContainerRequest\x1a(.containermanager.StartContainerResponse\x12`\n" +
	"\rStopContainer\x12&.containermanager.StopContainerRequest\x1a'.containermanager.StopContainerResponse\x12o\n" +
	"\x12GetContainerStatus\x12+.containermanager.GetContainerStatusRequest\x1a,.containermanager.GetContainerStatusResponse\x12i\n" +
	"\x10GetContainerLogs\x12).containermanager.GetContainerLogsRequest\x1a*.containermanager.GetContainerLogsResponse\x12c\n" +
	"\x0eListContainers\x12'.containermanager.ListContainersRequest\x1a(.containermanager.ListContainersResponseB#Z!carrot/api/proto/containermanagerb\x06proto3"

var (
	file_containermanager_proto_rawDescOnce sync.Once
	file_containermanager_proto_rawDescData []byte
)

func file_containermanager_proto_rawDescGZIP() []byte {
	file_containermanager_proto_rawDescOnce.Do(func() {
		file_containermanager_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_containermanager_proto_rawDesc), len(file_containermanager_proto_rawDesc)))
	})
	return file_containermanager_proto_rawDescData
}

var file_containermanager_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_containermanager_proto_msgTypes = make([]protoimpl.MessageInfo, 19)
var file_containermanager_proto_goTypes = []any{
	(ContainerState)(0),                // 0: containermanager.ContainerState
	(*Resource)(nil),                   // 1: containermanager.Resource
	(*ContainerID)(nil),                // 2: containermanager.ContainerID
	(*NodeID)(nil),                     // 3: containermanager.NodeID
	(*ContainerLaunchContext)(nil),     // 4: containermanager.ContainerLaunchContext
	(*LocalResource)(nil),              // 5: containermanager.LocalResource
	(*ContainerStatus)(nil),            // 6: containermanager.ContainerStatus
	(*Container)(nil),                  // 7: containermanager.Container
	(*StartContainerRequest)(nil),      // 8: containermanager.StartContainerRequest
	(*StartContainerResponse)(nil),     // 9: containermanager.StartContainerResponse
	(*StopContainerRequest)(nil),       // 10: containermanager.StopContainerRequest
	(*StopContainerResponse)(nil),      // 11: containermanager.StopContainerResponse
	(*GetContainerStatusRequest)(nil),  // 12: containermanager.GetContainerStatusRequest
	(*GetContainerStatusResponse)(nil), // 13: containermanager.GetContainerStatusResponse
	(*GetContainerLogsRequest)(nil),    // 14: containermanager.GetContainerLogsRequest
	(*GetContainerLogsResponse)(nil),   // 15: containermanager.GetContainerLogsResponse
	(*ListContainersRequest)(nil),      // 16: containermanager.ListContainersRequest
	(*ListContainersResponse)(nil),     // 17: containermanager.ListContainersResponse
	nil,                                // 18: containermanager.ContainerLaunchContext.EnvironmentEntry
	nil,                                // 19: containermanager.ContainerLaunchContext.ServiceDataEntry
	(*timestamppb.Timestamp)(nil),      // 20: google.protobuf.Timestamp
}
var file_containermanager_proto_depIdxs = []int32{
	18, // 0: containermanager.ContainerLaunchContext.environment:type_name -> containermanager.ContainerLaunchContext.EnvironmentEntry
	5,  // 1: containermanager.ContainerLaunchContext.local_resources:type_name -> containermanager.LocalResource
	19, // 2: containermanager.ContainerLaunchContext.service_data:type_name -> containermanager.ContainerLaunchContext.ServiceDataEntry
	20, // 3: containermanager.LocalResource.timestamp:type_name -> google.protobuf.Timestamp
	2,  // 4: containermanager.ContainerStatus.container_id:type_name -> containermanager.ContainerID
	0,  // 5: containermanager.ContainerStatus.state:type_name -> containermanager.ContainerState
	20, // 6: containermanager.ContainerStatus.start_time:type_name -> google.protobuf.Timestamp
	20, // 7: containermanager.ContainerStatus.finish_time:type_name -> google.protobuf.Timestamp
	1,  // 8: containermanager.ContainerStatus.allocated_resource:type_name -> containermanager.Resource
	2,  // 9: containermanager.Container.id:type_name -> containermanager.ContainerID
	3,  // 10: containermanager.Container.node_id:type_name -> containermanager.NodeID
	1,  // 11: containermanager.Container.resource:type_name -> containermanager.Resource
	0,  // 12: containermanager.Container.state:type_name -> containermanager.ContainerState
	2,  // 13: containermanager.StartContainerRequest.container_id:type_name -> containermanager.ContainerID
	4,  // 14: containermanager.StartContainerRequest.launch_context:type_name -> containermanager.ContainerLaunchContext
	1,  // 15: containermanager.StartContainerRequest.allocated_resource:type_name -> containermanager.Resource
	2,  // 16: containermanager.StopContainerRequest.container_id:type_name -> containermanager.ContainerID
	2,  // 17: containermanager.GetContainerStatusRequest.container_id:type_name -> containermanager.ContainerID
	6,  // 18: containermanager.GetContainerStatusResponse.container_status:type_name -> containermanager.ContainerStatus
	2,  // 19: containermanager.GetContainerLogsRequest.container_id:type_name -> containermanager.ContainerID
	0,  // 20: containermanager.ListContainersRequest.state_filter:type_name -> containermanager.ContainerState
	7,  // 21: containermanager.ListContainersResponse.containers:type_name -> containermanager.Container
	8,  // 22: containermanager.ContainerManagerService.StartContainer:input_type -> containermanager.StartContainerRequest
	10, // 23: containermanager.ContainerManagerService.StopContainer:input_type -> containermanager.StopContainerRequest
	12, // 24: containermanager.ContainerManagerService.GetContainerStatus:input_type -> containermanager.GetContainerStatusRequest
	14, // 25: containermanager.ContainerManagerService.GetContainerLogs:input_type -> containermanager.GetContainerLogsRequest
	16, // 26: containermanager.ContainerManagerService.ListContainers:input_type -> containermanager.ListContainersRequest
	9,  // 27: containermanager.ContainerManagerService.StartContainer:output_type -> containermanager.StartContainerResponse
	11, // 28: containermanager.ContainerManagerService.StopContainer:output_type -> containermanager.StopContainerResponse
	13, // 29: containermanager.ContainerManagerService.GetContainerStatus:output_type -> containermanager.GetContainerStatusResponse
	15, // 30: containermanager.ContainerManagerService.GetContainerLogs:output_type -> containermanager.GetContainerLogsResponse
	17, // 31: containermanager.ContainerManagerService.ListContainers:output_type -> containermanager.ListContainersResponse
	27, // [27:32] is the sub-list for method output_type
	22, // [22:27] is the sub-list for method input_type
	22, // [22:22] is the sub-list for extension type_name
	22, // [22:22] is the sub-list for extension extendee
	0,  // [0:22] is the sub-list for field type_name
}

func init() { file_containermanager_proto_init() }
func file_containermanager_proto_init() {
	if File_containermanager_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_containermanager_proto_rawDesc), len(file_containermanager_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   19,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_containermanager_proto_goTypes,
		DependencyIndexes: file_containermanager_proto_depIdxs,
		EnumInfos:         file_containermanager_proto_enumTypes,
		MessageInfos:      file_containermanager_proto_msgTypes,
	}.Build()
	File_containermanager_proto = out.File
	file_containermanager_proto_goTypes = nil
	file_containermanager_proto_depIdxs = nil
}
