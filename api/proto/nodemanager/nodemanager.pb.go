// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.8
// 	protoc        v4.25.3
// source: api/proto/rmnm.proto

package nodemanager

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 容器状态枚举
type ContainerState int32

const (
	ContainerState_CONTAINER_STATE_UNSPECIFIED ContainerState = 0
	ContainerState_CONTAINER_STATE_NEW         ContainerState = 1
	ContainerState_CONTAINER_STATE_RUNNING     ContainerState = 2
	ContainerState_CONTAINER_STATE_COMPLETE    ContainerState = 3
	ContainerState_CONTAINER_STATE_FAILED      ContainerState = 4
	ContainerState_CONTAINER_STATE_KILLED      ContainerState = 5
)

// Enum value maps for ContainerState.
var (
	ContainerState_name = map[int32]string{
		0: "CONTAINER_STATE_UNSPECIFIED",
		1: "CONTAINER_STATE_NEW",
		2: "CONTAINER_STATE_RUNNING",
		3: "CONTAINER_STATE_COMPLETE",
		4: "CONTAINER_STATE_FAILED",
		5: "CONTAINER_STATE_KILLED",
	}
	ContainerState_value = map[string]int32{
		"CONTAINER_STATE_UNSPECIFIED": 0,
		"CONTAINER_STATE_NEW":         1,
		"CONTAINER_STATE_RUNNING":     2,
		"CONTAINER_STATE_COMPLETE":    3,
		"CONTAINER_STATE_FAILED":      4,
		"CONTAINER_STATE_KILLED":      5,
	}
)

func (x ContainerState) Enum() *ContainerState {
	p := new(ContainerState)
	*p = x
	return p
}

func (x ContainerState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ContainerState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_nodemanager_proto_enumTypes[0].Descriptor()
}

func (ContainerState) Type() protoreflect.EnumType {
	return &file_api_proto_nodemanager_proto_enumTypes[0]
}

func (x ContainerState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ContainerState.Descriptor instead.
func (ContainerState) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_nodemanager_proto_rawDescGZIP(), []int{0}
}

// 容器操作类型
type ActionType int32

const (
	ActionType_ACTION_TYPE_UNSPECIFIED ActionType = 0
	ActionType_ACTION_TYPE_LAUNCH      ActionType = 1
	ActionType_ACTION_TYPE_STOP        ActionType = 2
	ActionType_ACTION_TYPE_KILL        ActionType = 3
	ActionType_ACTION_TYPE_CLEANUP     ActionType = 4
)

// Enum value maps for ActionType.
var (
	ActionType_name = map[int32]string{
		0: "ACTION_TYPE_UNSPECIFIED",
		1: "ACTION_TYPE_LAUNCH",
		2: "ACTION_TYPE_STOP",
		3: "ACTION_TYPE_KILL",
		4: "ACTION_TYPE_CLEANUP",
	}
	ActionType_value = map[string]int32{
		"ACTION_TYPE_UNSPECIFIED": 0,
		"ACTION_TYPE_LAUNCH":      1,
		"ACTION_TYPE_STOP":        2,
		"ACTION_TYPE_KILL":        3,
		"ACTION_TYPE_CLEANUP":     4,
	}
)

func (x ActionType) Enum() *ActionType {
	p := new(ActionType)
	*p = x
	return p
}

func (x ActionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ActionType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_nodemanager_proto_enumTypes[1].Descriptor()
}

func (ActionType) Type() protoreflect.EnumType {
	return &file_api_proto_nodemanager_proto_enumTypes[1]
}

func (x ActionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ActionType.Descriptor instead.
func (ActionType) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_nodemanager_proto_rawDescGZIP(), []int{1}
}

// 健康状态枚举
type HealthState int32

const (
	HealthState_HEALTH_STATE_UNSPECIFIED HealthState = 0
	HealthState_HEALTH_STATE_HEALTHY     HealthState = 1
	HealthState_HEALTH_STATE_UNHEALTHY   HealthState = 2
	HealthState_HEALTH_STATE_UNKNOWN     HealthState = 3
)

// Enum value maps for HealthState.
var (
	HealthState_name = map[int32]string{
		0: "HEALTH_STATE_UNSPECIFIED",
		1: "HEALTH_STATE_HEALTHY",
		2: "HEALTH_STATE_UNHEALTHY",
		3: "HEALTH_STATE_UNKNOWN",
	}
	HealthState_value = map[string]int32{
		"HEALTH_STATE_UNSPECIFIED": 0,
		"HEALTH_STATE_HEALTHY":     1,
		"HEALTH_STATE_UNHEALTHY":   2,
		"HEALTH_STATE_UNKNOWN":     3,
	}
)

func (x HealthState) Enum() *HealthState {
	p := new(HealthState)
	*p = x
	return p
}

func (x HealthState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HealthState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_nodemanager_proto_enumTypes[2].Descriptor()
}

func (HealthState) Type() protoreflect.EnumType {
	return &file_api_proto_nodemanager_proto_enumTypes[2]
}

func (x HealthState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HealthState.Descriptor instead.
func (HealthState) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_nodemanager_proto_rawDescGZIP(), []int{2}
}

// 节点状态枚举
type NodeState int32

const (
	NodeState_NODE_STATE_UNSPECIFIED     NodeState = 0
	NodeState_NODE_STATE_NEW             NodeState = 1
	NodeState_NODE_STATE_RUNNING         NodeState = 2
	NodeState_NODE_STATE_UNHEALTHY       NodeState = 3
	NodeState_NODE_STATE_DECOMMISSIONING NodeState = 4
	NodeState_NODE_STATE_DECOMMISSIONED  NodeState = 5
	NodeState_NODE_STATE_LOST            NodeState = 6
	NodeState_NODE_STATE_REBOOTED        NodeState = 7
)

// Enum value maps for NodeState.
var (
	NodeState_name = map[int32]string{
		0: "NODE_STATE_UNSPECIFIED",
		1: "NODE_STATE_NEW",
		2: "NODE_STATE_RUNNING",
		3: "NODE_STATE_UNHEALTHY",
		4: "NODE_STATE_DECOMMISSIONING",
		5: "NODE_STATE_DECOMMISSIONED",
		6: "NODE_STATE_LOST",
		7: "NODE_STATE_REBOOTED",
	}
	NodeState_value = map[string]int32{
		"NODE_STATE_UNSPECIFIED":     0,
		"NODE_STATE_NEW":             1,
		"NODE_STATE_RUNNING":         2,
		"NODE_STATE_UNHEALTHY":       3,
		"NODE_STATE_DECOMMISSIONING": 4,
		"NODE_STATE_DECOMMISSIONED":  5,
		"NODE_STATE_LOST":            6,
		"NODE_STATE_REBOOTED":        7,
	}
)

func (x NodeState) Enum() *NodeState {
	p := new(NodeState)
	*p = x
	return p
}

func (x NodeState) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (NodeState) Descriptor() protoreflect.EnumDescriptor {
	return file_api_proto_nodemanager_proto_enumTypes[3].Descriptor()
}

func (NodeState) Type() protoreflect.EnumType {
	return &file_api_proto_nodemanager_proto_enumTypes[3]
}

func (x NodeState) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use NodeState.Descriptor instead.
func (NodeState) EnumDescriptor() ([]byte, []int) {
	return file_api_proto_nodemanager_proto_rawDescGZIP(), []int{3}
}

// 节点注册请求
type RegisterNodeRequest struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	NodeInfo        *NodeInfo              `protobuf:"bytes,1,opt,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`
	TotalCapability *ResourceCapability    `protobuf:"bytes,2,opt,name=total_capability,json=totalCapability,proto3" json:"total_capability,omitempty"`
	HttpAddress     string                 `protobuf:"bytes,3,opt,name=http_address,json=httpAddress,proto3" json:"http_address,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *RegisterNodeRequest) Reset() {
	*x = RegisterNodeRequest{}
	mi := &file_api_proto_nodemanager_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeRequest) ProtoMessage() {}

func (x *RegisterNodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nodemanager_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeRequest.ProtoReflect.Descriptor instead.
func (*RegisterNodeRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_nodemanager_proto_rawDescGZIP(), []int{0}
}

func (x *RegisterNodeRequest) GetNodeInfo() *NodeInfo {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

func (x *RegisterNodeRequest) GetTotalCapability() *ResourceCapability {
	if x != nil {
		return x.TotalCapability
	}
	return nil
}

func (x *RegisterNodeRequest) GetHttpAddress() string {
	if x != nil {
		return x.HttpAddress
	}
	return ""
}

// 节点注册响应
type RegisterNodeResponse struct {
	state                 protoimpl.MessageState `protogen:"open.v1"`
	Success               bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message               string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RegistrationTimestamp int64                  `protobuf:"varint,3,opt,name=registration_timestamp,json=registrationTimestamp,proto3" json:"registration_timestamp,omitempty"`
	unknownFields         protoimpl.UnknownFields
	sizeCache             protoimpl.SizeCache
}

func (x *RegisterNodeResponse) Reset() {
	*x = RegisterNodeResponse{}
	mi := &file_api_proto_nodemanager_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterNodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterNodeResponse) ProtoMessage() {}

func (x *RegisterNodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nodemanager_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterNodeResponse.ProtoReflect.Descriptor instead.
func (*RegisterNodeResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_nodemanager_proto_rawDescGZIP(), []int{1}
}

func (x *RegisterNodeResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterNodeResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterNodeResponse) GetRegistrationTimestamp() int64 {
	if x != nil {
		return x.RegistrationTimestamp
	}
	return 0
}

// 心跳请求
type HeartbeatRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NodeId            string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	UsedResources     *ResourceUsage         `protobuf:"bytes,2,opt,name=used_resources,json=usedResources,proto3" json:"used_resources,omitempty"`
	ContainerStatuses []*ContainerStatus     `protobuf:"bytes,3,rep,name=container_statuses,json=containerStatuses,proto3" json:"container_statuses,omitempty"`
	Timestamp         *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	HealthStatus      *HealthStatus          `protobuf:"bytes,5,opt,name=health_status,json=healthStatus,proto3" json:"health_status,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_api_proto_nodemanager_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nodemanager_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_nodemanager_proto_rawDescGZIP(), []int{2}
}

func (x *HeartbeatRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *HeartbeatRequest) GetUsedResources() *ResourceUsage {
	if x != nil {
		return x.UsedResources
	}
	return nil
}

func (x *HeartbeatRequest) GetContainerStatuses() []*ContainerStatus {
	if x != nil {
		return x.ContainerStatuses
	}
	return nil
}

func (x *HeartbeatRequest) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

func (x *HeartbeatRequest) GetHealthStatus() *HealthStatus {
	if x != nil {
		return x.HealthStatus
	}
	return nil
}

// 心跳响应
type HeartbeatResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Success           bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message           string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ContainerActions  []*ContainerAction     `protobuf:"bytes,3,rep,name=container_actions,json=containerActions,proto3" json:"container_actions,omitempty"`
	ResponseId        int64                  `protobuf:"varint,4,opt,name=response_id,json=responseId,proto3" json:"response_id,omitempty"`
	HeartbeatInterval int32                  `protobuf:"varint,5,opt,name=heartbeat_interval,json=heartbeatInterval,proto3" json:"heartbeat_interval,omitempty"` // 秒
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_api_proto_nodemanager_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nodemanager_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_nodemanager_proto_rawDescGZIP(), []int{3}
}

func (x *HeartbeatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HeartbeatResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HeartbeatResponse) GetContainerActions() []*ContainerAction {
	if x != nil {
		return x.ContainerActions
	}
	return nil
}

func (x *HeartbeatResponse) GetResponseId() int64 {
	if x != nil {
		return x.ResponseId
	}
	return 0
}

func (x *HeartbeatResponse) GetHeartbeatInterval() int32 {
	if x != nil {
		return x.HeartbeatInterval
	}
	return 0
}

// 获取节点状态请求
type GetNodeStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNodeStatusRequest) Reset() {
	*x = GetNodeStatusRequest{}
	mi := &file_api_proto_nodemanager_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeStatusRequest) ProtoMessage() {}

func (x *GetNodeStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nodemanager_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeStatusRequest.ProtoReflect.Descriptor instead.
func (*GetNodeStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_proto_nodemanager_proto_rawDescGZIP(), []int{4}
}

func (x *GetNodeStatusRequest) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

// 获取节点状态响应
type GetNodeStatusResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	NodeInfo          *NodeInfo              `protobuf:"bytes,1,opt,name=node_info,json=nodeInfo,proto3" json:"node_info,omitempty"`
	TotalCapability   *ResourceCapability    `protobuf:"bytes,2,opt,name=total_capability,json=totalCapability,proto3" json:"total_capability,omitempty"`
	UsedResources     *ResourceUsage         `protobuf:"bytes,3,opt,name=used_resources,json=usedResources,proto3" json:"used_resources,omitempty"`
	ContainerStatuses []*ContainerStatus     `protobuf:"bytes,4,rep,name=container_statuses,json=containerStatuses,proto3" json:"container_statuses,omitempty"`
	HealthStatus      *HealthStatus          `protobuf:"bytes,5,opt,name=health_status,json=healthStatus,proto3" json:"health_status,omitempty"`
	State             NodeState              `protobuf:"varint,6,opt,name=state,proto3,enum=carrot.rmnm.v1.NodeState" json:"state,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *GetNodeStatusResponse) Reset() {
	*x = GetNodeStatusResponse{}
	mi := &file_api_proto_nodemanager_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNodeStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNodeStatusResponse) ProtoMessage() {}

func (x *GetNodeStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nodemanager_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNodeStatusResponse.ProtoReflect.Descriptor instead.
func (*GetNodeStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_proto_nodemanager_proto_rawDescGZIP(), []int{5}
}

func (x *GetNodeStatusResponse) GetNodeInfo() *NodeInfo {
	if x != nil {
		return x.NodeInfo
	}
	return nil
}

func (x *GetNodeStatusResponse) GetTotalCapability() *ResourceCapability {
	if x != nil {
		return x.TotalCapability
	}
	return nil
}

func (x *GetNodeStatusResponse) GetUsedResources() *ResourceUsage {
	if x != nil {
		return x.UsedResources
	}
	return nil
}

func (x *GetNodeStatusResponse) GetContainerStatuses() []*ContainerStatus {
	if x != nil {
		return x.ContainerStatuses
	}
	return nil
}

func (x *GetNodeStatusResponse) GetHealthStatus() *HealthStatus {
	if x != nil {
		return x.HealthStatus
	}
	return nil
}

func (x *GetNodeStatusResponse) GetState() NodeState {
	if x != nil {
		return x.State
	}
	return NodeState_NODE_STATE_UNSPECIFIED
}

// 节点信息
type NodeInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NodeId        string                 `protobuf:"bytes,1,opt,name=node_id,json=nodeId,proto3" json:"node_id,omitempty"`
	Hostname      string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	IpAddress     string                 `protobuf:"bytes,3,opt,name=ip_address,json=ipAddress,proto3" json:"ip_address,omitempty"`
	Port          int32                  `protobuf:"varint,4,opt,name=port,proto3" json:"port,omitempty"`
	RackName      string                 `protobuf:"bytes,5,opt,name=rack_name,json=rackName,proto3" json:"rack_name,omitempty"`
	Labels        []string               `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NodeInfo) Reset() {
	*x = NodeInfo{}
	mi := &file_api_proto_nodemanager_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NodeInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NodeInfo) ProtoMessage() {}

func (x *NodeInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nodemanager_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NodeInfo.ProtoReflect.Descriptor instead.
func (*NodeInfo) Descriptor() ([]byte, []int) {
	return file_api_proto_nodemanager_proto_rawDescGZIP(), []int{6}
}

func (x *NodeInfo) GetNodeId() string {
	if x != nil {
		return x.NodeId
	}
	return ""
}

func (x *NodeInfo) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *NodeInfo) GetIpAddress() string {
	if x != nil {
		return x.IpAddress
	}
	return ""
}

func (x *NodeInfo) GetPort() int32 {
	if x != nil {
		return x.Port
	}
	return 0
}

func (x *NodeInfo) GetRackName() string {
	if x != nil {
		return x.RackName
	}
	return ""
}

func (x *NodeInfo) GetLabels() []string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// 资源能力
type ResourceCapability struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	MemoryMb          int64                  `protobuf:"varint,1,opt,name=memory_mb,json=memoryMb,proto3" json:"memory_mb,omitempty"`
	Vcores            int32                  `protobuf:"varint,2,opt,name=vcores,proto3" json:"vcores,omitempty"`
	ExtendedResources map[string]int64       `protobuf:"bytes,3,rep,name=extended_resources,json=extendedResources,proto3" json:"extended_resources,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"` // GPU, 存储等扩展资源
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ResourceCapability) Reset() {
	*x = ResourceCapability{}
	mi := &file_api_proto_nodemanager_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceCapability) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceCapability) ProtoMessage() {}

func (x *ResourceCapability) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nodemanager_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceCapability.ProtoReflect.Descriptor instead.
func (*ResourceCapability) Descriptor() ([]byte, []int) {
	return file_api_proto_nodemanager_proto_rawDescGZIP(), []int{7}
}

func (x *ResourceCapability) GetMemoryMb() int64 {
	if x != nil {
		return x.MemoryMb
	}
	return 0
}

func (x *ResourceCapability) GetVcores() int32 {
	if x != nil {
		return x.Vcores
	}
	return 0
}

func (x *ResourceCapability) GetExtendedResources() map[string]int64 {
	if x != nil {
		return x.ExtendedResources
	}
	return nil
}

// 资源使用情况
type ResourceUsage struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	MemoryMb           int64                  `protobuf:"varint,1,opt,name=memory_mb,json=memoryMb,proto3" json:"memory_mb,omitempty"`
	Vcores             int32                  `protobuf:"varint,2,opt,name=vcores,proto3" json:"vcores,omitempty"`
	ExtendedResources  map[string]int64       `protobuf:"bytes,3,rep,name=extended_resources,json=extendedResources,proto3" json:"extended_resources,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	CpuUsagePercent    float64                `protobuf:"fixed64,4,opt,name=cpu_usage_percent,json=cpuUsagePercent,proto3" json:"cpu_usage_percent,omitempty"`
	MemoryUsagePercent float64                `protobuf:"fixed64,5,opt,name=memory_usage_percent,json=memoryUsagePercent,proto3" json:"memory_usage_percent,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *ResourceUsage) Reset() {
	*x = ResourceUsage{}
	mi := &file_api_proto_nodemanager_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ResourceUsage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResourceUsage) ProtoMessage() {}

func (x *ResourceUsage) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nodemanager_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResourceUsage.ProtoReflect.Descriptor instead.
func (*ResourceUsage) Descriptor() ([]byte, []int) {
	return file_api_proto_nodemanager_proto_rawDescGZIP(), []int{8}
}

func (x *ResourceUsage) GetMemoryMb() int64 {
	if x != nil {
		return x.MemoryMb
	}
	return 0
}

func (x *ResourceUsage) GetVcores() int32 {
	if x != nil {
		return x.Vcores
	}
	return 0
}

func (x *ResourceUsage) GetExtendedResources() map[string]int64 {
	if x != nil {
		return x.ExtendedResources
	}
	return nil
}

func (x *ResourceUsage) GetCpuUsagePercent() float64 {
	if x != nil {
		return x.CpuUsagePercent
	}
	return 0
}

func (x *ResourceUsage) GetMemoryUsagePercent() float64 {
	if x != nil {
		return x.MemoryUsagePercent
	}
	return 0
}

// 容器状态
type ContainerStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	ApplicationId string                 `protobuf:"bytes,2,opt,name=application_id,json=applicationId,proto3" json:"application_id,omitempty"`
	State         ContainerState         `protobuf:"varint,3,opt,name=state,proto3,enum=carrot.rmnm.v1.ContainerState" json:"state,omitempty"`
	ExitCode      int32                  `protobuf:"varint,4,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	Diagnostics   string                 `protobuf:"bytes,5,opt,name=diagnostics,proto3" json:"diagnostics,omitempty"`
	ResourceUsage *ResourceUsage         `protobuf:"bytes,6,opt,name=resource_usage,json=resourceUsage,proto3" json:"resource_usage,omitempty"`
	StartTime     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	FinishTime    *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=finish_time,json=finishTime,proto3" json:"finish_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerStatus) Reset() {
	*x = ContainerStatus{}
	mi := &file_api_proto_nodemanager_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerStatus) ProtoMessage() {}

func (x *ContainerStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nodemanager_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerStatus.ProtoReflect.Descriptor instead.
func (*ContainerStatus) Descriptor() ([]byte, []int) {
	return file_api_proto_nodemanager_proto_rawDescGZIP(), []int{9}
}

func (x *ContainerStatus) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ContainerStatus) GetApplicationId() string {
	if x != nil {
		return x.ApplicationId
	}
	return ""
}

func (x *ContainerStatus) GetState() ContainerState {
	if x != nil {
		return x.State
	}
	return ContainerState_CONTAINER_STATE_UNSPECIFIED
}

func (x *ContainerStatus) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ContainerStatus) GetDiagnostics() string {
	if x != nil {
		return x.Diagnostics
	}
	return ""
}

func (x *ContainerStatus) GetResourceUsage() *ResourceUsage {
	if x != nil {
		return x.ResourceUsage
	}
	return nil
}

func (x *ContainerStatus) GetStartTime() *timestamppb.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *ContainerStatus) GetFinishTime() *timestamppb.Timestamp {
	if x != nil {
		return x.FinishTime
	}
	return nil
}

// 容器操作
type ContainerAction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ContainerId   string                 `protobuf:"bytes,1,opt,name=container_id,json=containerId,proto3" json:"container_id,omitempty"`
	Action        ActionType             `protobuf:"varint,2,opt,name=action,proto3,enum=carrot.rmnm.v1.ActionType" json:"action,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ContainerAction) Reset() {
	*x = ContainerAction{}
	mi := &file_api_proto_nodemanager_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ContainerAction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerAction) ProtoMessage() {}

func (x *ContainerAction) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nodemanager_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerAction.ProtoReflect.Descriptor instead.
func (*ContainerAction) Descriptor() ([]byte, []int) {
	return file_api_proto_nodemanager_proto_rawDescGZIP(), []int{10}
}

func (x *ContainerAction) GetContainerId() string {
	if x != nil {
		return x.ContainerId
	}
	return ""
}

func (x *ContainerAction) GetAction() ActionType {
	if x != nil {
		return x.Action
	}
	return ActionType_ACTION_TYPE_UNSPECIFIED
}

func (x *ContainerAction) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 健康状态
type HealthStatus struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	State            HealthState            `protobuf:"varint,1,opt,name=state,proto3,enum=carrot.rmnm.v1.HealthState" json:"state,omitempty"`
	LastHealthReport string                 `protobuf:"bytes,2,opt,name=last_health_report,json=lastHealthReport,proto3" json:"last_health_report,omitempty"`
	LastHealthUpdate *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=last_health_update,json=lastHealthUpdate,proto3" json:"last_health_update,omitempty"`
	HealthChecks     []*HealthCheck         `protobuf:"bytes,4,rep,name=health_checks,json=healthChecks,proto3" json:"health_checks,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *HealthStatus) Reset() {
	*x = HealthStatus{}
	mi := &file_api_proto_nodemanager_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthStatus) ProtoMessage() {}

func (x *HealthStatus) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nodemanager_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthStatus.ProtoReflect.Descriptor instead.
func (*HealthStatus) Descriptor() ([]byte, []int) {
	return file_api_proto_nodemanager_proto_rawDescGZIP(), []int{11}
}

func (x *HealthStatus) GetState() HealthState {
	if x != nil {
		return x.State
	}
	return HealthState_HEALTH_STATE_UNSPECIFIED
}

func (x *HealthStatus) GetLastHealthReport() string {
	if x != nil {
		return x.LastHealthReport
	}
	return ""
}

func (x *HealthStatus) GetLastHealthUpdate() *timestamppb.Timestamp {
	if x != nil {
		return x.LastHealthUpdate
	}
	return nil
}

func (x *HealthStatus) GetHealthChecks() []*HealthCheck {
	if x != nil {
		return x.HealthChecks
	}
	return nil
}

// 健康检查
type HealthCheck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	State         HealthState            `protobuf:"varint,2,opt,name=state,proto3,enum=carrot.rmnm.v1.HealthState" json:"state,omitempty"`
	Message       string                 `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheck) Reset() {
	*x = HealthCheck{}
	mi := &file_api_proto_nodemanager_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheck) ProtoMessage() {}

func (x *HealthCheck) ProtoReflect() protoreflect.Message {
	mi := &file_api_proto_nodemanager_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheck.ProtoReflect.Descriptor instead.
func (*HealthCheck) Descriptor() ([]byte, []int) {
	return file_api_proto_nodemanager_proto_rawDescGZIP(), []int{12}
}

func (x *HealthCheck) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HealthCheck) GetState() HealthState {
	if x != nil {
		return x.State
	}
	return HealthState_HEALTH_STATE_UNSPECIFIED
}

func (x *HealthCheck) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HealthCheck) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_api_proto_nodemanager_proto protoreflect.FileDescriptor

const file_api_proto_nodemanager_proto_rawDesc = "" +
	"\n" +
	"\x1bapi/proto/rmnm.proto\x12\x15carrot.rmnm.v1\x1a\x1fgoogle/protobuf/timestamp.proto\"\xcc\x01\n" +
	"\x13RegisterNodeRequest\x12<\n" +
	"\tnode_info\x18\x01 \x01(\v2\x1f.carrot.rmnm.v1.NodeInfoR\bnodeInfo\x12T\n" +
	"\x10total_capability\x18\x02 \x01(\v2).carrot.rmnm.v1.ResourceCapabilityR\x0ftotalCapability\x12!\n" +
	"\fhttp_address\x18\x03 \x01(\tR\vhttpAddress\"\x81\x01\n" +
	"\x14RegisterNodeResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x125\n" +
	"\x16registration_timestamp\x18\x03 \x01(\x03R\x15registrationTimestamp\"\xd3\x02\n" +
	"\x10HeartbeatRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12K\n" +
	"\x0eused_resources\x18\x02 \x01(\v2$.carrot.rmnm.v1.ResourceUsageR\rusedResources\x12U\n" +
	"\x12container_statuses\x18\x03 \x03(\v2&.carrot.rmnm.v1.ContainerStatusR\x11containerStatuses\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x12H\n" +
	"\rhealth_status\x18\x05 \x01(\v2#.carrot.rmnm.v1.HealthStatusR\fhealthStatus\"\xec\x01\n" +
	"\x11HeartbeatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12S\n" +
	"\x11container_actions\x18\x03 \x03(\v2&.carrot.rmnm.v1.ContainerActionR\x10containerActions\x12\x1f\n" +
	"\vresponse_id\x18\x04 \x01(\x03R\n" +
	"responseId\x12-\n" +
	"\x12heartbeat_interval\x18\x05 \x01(\x05R\x11heartbeatInterval\"/\n" +
	"\x14GetNodeStatusRequest\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\"\xd1\x03\n" +
	"\x15GetNodeStatusResponse\x12<\n" +
	"\tnode_info\x18\x01 \x01(\v2\x1f.carrot.rmnm.v1.NodeInfoR\bnodeInfo\x12T\n" +
	"\x10total_capability\x18\x02 \x01(\v2).carrot.rmnm.v1.ResourceCapabilityR\x0ftotalCapability\x12K\n" +
	"\x0eused_resources\x18\x03 \x01(\v2$.carrot.rmnm.v1.ResourceUsageR\rusedResources\x12U\n" +
	"\x12container_statuses\x18\x04 \x03(\v2&.carrot.rmnm.v1.ContainerStatusR\x11containerStatuses\x12H\n" +
	"\rhealth_status\x18\x05 \x01(\v2#.carrot.rmnm.v1.HealthStatusR\fhealthStatus\x126\n" +
	"\x05state\x18\x06 \x01(\x0e2 .carrot.rmnm.v1.NodeStateR\x05state\"\xa7\x01\n" +
	"\bNodeInfo\x12\x17\n" +
	"\anode_id\x18\x01 \x01(\tR\x06nodeId\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12\x1d\n" +
	"\n" +
	"ip_address\x18\x03 \x01(\tR\tipAddress\x12\x12\n" +
	"\x04port\x18\x04 \x01(\x05R\x04port\x12\x1b\n" +
	"\track_name\x18\x05 \x01(\tR\brackName\x12\x16\n" +
	"\x06labels\x18\x06 \x03(\tR\x06labels\"\x80\x02\n" +
	"\x12ResourceCapability\x12\x1b\n" +
	"\tmemory_mb\x18\x01 \x01(\x03R\bmemoryMb\x12\x16\n" +
	"\x06vcores\x18\x02 \x01(\x05R\x06vcores\x12o\n" +
	"\x12extended_resources\x18\x03 \x03(\v2@.carrot.rmnm.v1.ResourceCapability.ExtendedResourcesEntryR\x11extendedResources\x1aD\n" +
	"\x16ExtendedResourcesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\xd4\x02\n" +
	"\rResourceUsage\x12\x1b\n" +
	"\tmemory_mb\x18\x01 \x01(\x03R\bmemoryMb\x12\x16\n" +
	"\x06vcores\x18\x02 \x01(\x05R\x06vcores\x12j\n" +
	"\x12extended_resources\x18\x03 \x03(\v2;.carrot.rmnm.v1.ResourceUsage.ExtendedResourcesEntryR\x11extendedResources\x12*\n" +
	"\x11cpu_usage_percent\x18\x04 \x01(\x01R\x0fcpuUsagePercent\x120\n" +
	"\x14memory_usage_percent\x18\x05 \x01(\x01R\x12memoryUsagePercent\x1aD\n" +
	"\x16ExtendedResourcesEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\x9c\x03\n" +
	"\x0fContainerStatus\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x12%\n" +
	"\x0eapplication_id\x18\x02 \x01(\tR\rapplicationId\x12;\n" +
	"\x05state\x18\x03 \x01(\x0e2%.carrot.rmnm.v1.ContainerStateR\x05state\x12\x1b\n" +
	"\texit_code\x18\x04 \x01(\x05R\bexitCode\x12 \n" +
	"\vdiagnostics\x18\x05 \x01(\tR\vdiagnostics\x12K\n" +
	"\x0eresource_usage\x18\x06 \x01(\v2$.carrot.rmnm.v1.ResourceUsageR\rresourceUsage\x129\n" +
	"\n" +
	"start_time\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tstartTime\x12;\n" +
	"\vfinish_time\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\n" +
	"finishTime\"\x87\x01\n" +
	"\x0fContainerAction\x12!\n" +
	"\fcontainer_id\x18\x01 \x01(\tR\vcontainerId\x129\n" +
	"\x06action\x18\x02 \x01(\x0e2!.carrot.rmnm.v1.ActionTypeR\x06action\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"\x89\x02\n" +
	"\fHealthStatus\x128\n" +
	"\x05state\x18\x01 \x01(\x0e2\".carrot.rmnm.v1.HealthStateR\x05state\x12,\n" +
	"\x12last_health_report\x18\x02 \x01(\tR\x10lastHealthReport\x12H\n" +
	"\x12last_health_update\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\x10lastHealthUpdate\x12G\n" +
	"\rhealth_checks\x18\x04 \x03(\v2\".carrot.rmnm.v1.HealthCheckR\fhealthChecks\"\xaf\x01\n" +
	"\vHealthCheck\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x128\n" +
	"\x05state\x18\x02 \x01(\x0e2\".carrot.rmnm.v1.HealthStateR\x05state\x12\x18\n" +
	"\amessage\x18\x03 \x01(\tR\amessage\x128\n" +
	"\ttimestamp\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp*\xbd\x01\n" +
	"\x0eContainerState\x12\x1f\n" +
	"\x1bCONTAINER_STATE_UNSPECIFIED\x10\x00\x12\x17\n" +
	"\x13CONTAINER_STATE_NEW\x10\x01\x12\x1b\n" +
	"\x17CONTAINER_STATE_RUNNING\x10\x02\x12\x1c\n" +
	"\x18CONTAINER_STATE_COMPLETE\x10\x03\x12\x1a\n" +
	"\x16CONTAINER_STATE_FAILED\x10\x04\x12\x1a\n" +
	"\x16CONTAINER_STATE_KILLED\x10\x05*\x86\x01\n" +
	"\n" +
	"ActionType\x12\x1b\n" +
	"\x17ACTION_TYPE_UNSPECIFIED\x10\x00\x12\x16\n" +
	"\x12ACTION_TYPE_LAUNCH\x10\x01\x12\x14\n" +
	"\x10ACTION_TYPE_STOP\x10\x02\x12\x14\n" +
	"\x10ACTION_TYPE_KILL\x10\x03\x12\x17\n" +
	"\x13ACTION_TYPE_CLEANUP\x10\x04*{\n" +
	"\vHealthState\x12\x1c\n" +
	"\x18HEALTH_STATE_UNSPECIFIED\x10\x00\x12\x18\n" +
	"\x14HEALTH_STATE_HEALTHY\x10\x01\x12\x1a\n" +
	"\x16HEALTH_STATE_UNHEALTHY\x10\x02\x12\x18\n" +
	"\x14HEALTH_STATE_UNKNOWN\x10\x03*\xda\x01\n" +
	"\tNodeState\x12\x1a\n" +
	"\x16NODE_STATE_UNSPECIFIED\x10\x00\x12\x12\n" +
	"\x0eNODE_STATE_NEW\x10\x01\x12\x16\n" +
	"\x12NODE_STATE_RUNNING\x10\x02\x12\x18\n" +
	"\x14NODE_STATE_UNHEALTHY\x10\x03\x12\x1e\n" +
	"\x1aNODE_STATE_DECOMMISSIONING\x10\x04\x12\x1d\n" +
	"\x19NODE_STATE_DECOMMISSIONED\x10\x05\x12\x13\n" +
	"\x0fNODE_STATE_LOST\x10\x06\x12\x17\n" +
	"\x13NODE_STATE_REBOOTED\x10\a2\xc9\x02\n" +
	"\x12NodeManagerService\x12g\n" +
	"\fRegisterNode\x12*.carrot.rmnm.v1.RegisterNodeRequest\x1a+.carrot.rmnm.v1.RegisterNodeResponse\x12^\n" +
	"\tHeartbeat\x12'.carrot.rmnm.v1.HeartbeatRequest\x1a(.carrot.rmnm.v1.HeartbeatResponse\x12j\n" +
	"\rGetNodeStatus\x12+.carrot.rmnm.v1.GetNodeStatusRequest\x1a,.carrot.rmnm.v1.GetNodeStatusResponseB\x1eZ\x1ccarrot/api/proto/nodemanagerb\x06proto3"

var (
	file_api_proto_nodemanager_proto_rawDescOnce sync.Once
	file_api_proto_nodemanager_proto_rawDescData []byte
)

func file_api_proto_nodemanager_proto_rawDescGZIP() []byte {
	file_api_proto_nodemanager_proto_rawDescOnce.Do(func() {
		file_api_proto_nodemanager_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_proto_nodemanager_proto_rawDesc), len(file_api_proto_nodemanager_proto_rawDesc)))
	})
	return file_api_proto_nodemanager_proto_rawDescData
}

var file_api_proto_nodemanager_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_api_proto_nodemanager_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_api_proto_nodemanager_proto_goTypes = []any{
	(ContainerState)(0),           // 0: carrot.rmnm.v1.ContainerState
	(ActionType)(0),               // 1: carrot.rmnm.v1.ActionType
	(HealthState)(0),              // 2: carrot.rmnm.v1.HealthState
	(NodeState)(0),                // 3: carrot.rmnm.v1.NodeState
	(*RegisterNodeRequest)(nil),   // 4: carrot.rmnm.v1.RegisterNodeRequest
	(*RegisterNodeResponse)(nil),  // 5: carrot.rmnm.v1.RegisterNodeResponse
	(*HeartbeatRequest)(nil),      // 6: carrot.rmnm.v1.HeartbeatRequest
	(*HeartbeatResponse)(nil),     // 7: carrot.rmnm.v1.HeartbeatResponse
	(*GetNodeStatusRequest)(nil),  // 8: carrot.rmnm.v1.GetNodeStatusRequest
	(*GetNodeStatusResponse)(nil), // 9: carrot.rmnm.v1.GetNodeStatusResponse
	(*NodeInfo)(nil),              // 10: carrot.rmnm.v1.NodeInfo
	(*ResourceCapability)(nil),    // 11: carrot.rmnm.v1.ResourceCapability
	(*ResourceUsage)(nil),         // 12: carrot.rmnm.v1.ResourceUsage
	(*ContainerStatus)(nil),       // 13: carrot.rmnm.v1.ContainerStatus
	(*ContainerAction)(nil),       // 14: carrot.rmnm.v1.ContainerAction
	(*HealthStatus)(nil),          // 15: carrot.rmnm.v1.HealthStatus
	(*HealthCheck)(nil),           // 16: carrot.rmnm.v1.HealthCheck
	nil,                           // 17: carrot.rmnm.v1.ResourceCapability.ExtendedResourcesEntry
	nil,                           // 18: carrot.rmnm.v1.ResourceUsage.ExtendedResourcesEntry
	(*timestamppb.Timestamp)(nil), // 19: google.protobuf.Timestamp
}
var file_api_proto_nodemanager_proto_depIdxs = []int32{
	10, // 0: carrot.rmnm.v1.RegisterNodeRequest.node_info:type_name -> carrot.rmnm.v1.NodeInfo
	11, // 1: carrot.rmnm.v1.RegisterNodeRequest.total_capability:type_name -> carrot.rmnm.v1.ResourceCapability
	12, // 2: carrot.rmnm.v1.HeartbeatRequest.used_resources:type_name -> carrot.rmnm.v1.ResourceUsage
	13, // 3: carrot.rmnm.v1.HeartbeatRequest.container_statuses:type_name -> carrot.rmnm.v1.ContainerStatus
	19, // 4: carrot.rmnm.v1.HeartbeatRequest.timestamp:type_name -> google.protobuf.Timestamp
	15, // 5: carrot.rmnm.v1.HeartbeatRequest.health_status:type_name -> carrot.rmnm.v1.HealthStatus
	14, // 6: carrot.rmnm.v1.HeartbeatResponse.container_actions:type_name -> carrot.rmnm.v1.ContainerAction
	10, // 7: carrot.rmnm.v1.GetNodeStatusResponse.node_info:type_name -> carrot.rmnm.v1.NodeInfo
	11, // 8: carrot.rmnm.v1.GetNodeStatusResponse.total_capability:type_name -> carrot.rmnm.v1.ResourceCapability
	12, // 9: carrot.rmnm.v1.GetNodeStatusResponse.used_resources:type_name -> carrot.rmnm.v1.ResourceUsage
	13, // 10: carrot.rmnm.v1.GetNodeStatusResponse.container_statuses:type_name -> carrot.rmnm.v1.ContainerStatus
	15, // 11: carrot.rmnm.v1.GetNodeStatusResponse.health_status:type_name -> carrot.rmnm.v1.HealthStatus
	3,  // 12: carrot.rmnm.v1.GetNodeStatusResponse.state:type_name -> carrot.rmnm.v1.NodeState
	17, // 13: carrot.rmnm.v1.ResourceCapability.extended_resources:type_name -> carrot.rmnm.v1.ResourceCapability.ExtendedResourcesEntry
	18, // 14: carrot.rmnm.v1.ResourceUsage.extended_resources:type_name -> carrot.rmnm.v1.ResourceUsage.ExtendedResourcesEntry
	0,  // 15: carrot.rmnm.v1.ContainerStatus.state:type_name -> carrot.rmnm.v1.ContainerState
	12, // 16: carrot.rmnm.v1.ContainerStatus.resource_usage:type_name -> carrot.rmnm.v1.ResourceUsage
	19, // 17: carrot.rmnm.v1.ContainerStatus.start_time:type_name -> google.protobuf.Timestamp
	19, // 18: carrot.rmnm.v1.ContainerStatus.finish_time:type_name -> google.protobuf.Timestamp
	1,  // 19: carrot.rmnm.v1.ContainerAction.action:type_name -> carrot.rmnm.v1.ActionType
	2,  // 20: carrot.rmnm.v1.HealthStatus.state:type_name -> carrot.rmnm.v1.HealthState
	19, // 21: carrot.rmnm.v1.HealthStatus.last_health_update:type_name -> google.protobuf.Timestamp
	16, // 22: carrot.rmnm.v1.HealthStatus.health_checks:type_name -> carrot.rmnm.v1.HealthCheck
	2,  // 23: carrot.rmnm.v1.HealthCheck.state:type_name -> carrot.rmnm.v1.HealthState
	19, // 24: carrot.rmnm.v1.HealthCheck.timestamp:type_name -> google.protobuf.Timestamp
	4,  // 25: carrot.rmnm.v1.NodeManagerService.RegisterNode:input_type -> carrot.rmnm.v1.RegisterNodeRequest
	6,  // 26: carrot.rmnm.v1.NodeManagerService.Heartbeat:input_type -> carrot.rmnm.v1.HeartbeatRequest
	8,  // 27: carrot.rmnm.v1.NodeManagerService.GetNodeStatus:input_type -> carrot.rmnm.v1.GetNodeStatusRequest
	5,  // 28: carrot.rmnm.v1.NodeManagerService.RegisterNode:output_type -> carrot.rmnm.v1.RegisterNodeResponse
	7,  // 29: carrot.rmnm.v1.NodeManagerService.Heartbeat:output_type -> carrot.rmnm.v1.HeartbeatResponse
	9,  // 30: carrot.rmnm.v1.NodeManagerService.GetNodeStatus:output_type -> carrot.rmnm.v1.GetNodeStatusResponse
	28, // [28:31] is the sub-list for method output_type
	25, // [25:28] is the sub-list for method input_type
	25, // [25:25] is the sub-list for extension type_name
	25, // [25:25] is the sub-list for extension extendee
	0,  // [0:25] is the sub-list for field type_name
}

func init() { file_api_proto_nodemanager_proto_init() }
func file_api_proto_nodemanager_proto_init() {
	if File_api_proto_nodemanager_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_proto_nodemanager_proto_rawDesc), len(file_api_proto_nodemanager_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_proto_nodemanager_proto_goTypes,
		DependencyIndexes: file_api_proto_nodemanager_proto_depIdxs,
		EnumInfos:         file_api_proto_nodemanager_proto_enumTypes,
		MessageInfos:      file_api_proto_nodemanager_proto_msgTypes,
	}.Build()
	File_api_proto_nodemanager_proto = out.File
	file_api_proto_nodemanager_proto_goTypes = nil
	file_api_proto_nodemanager_proto_depIdxs = nil
}
